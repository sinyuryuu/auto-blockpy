"use strict";function BlockMirror(configuration){this.validateConfiguration(configuration),this.initializeVariables(),this.configuration.skipSkulpt||this.loadSkulpt(),this.textToBlocks=new BlockMirrorTextToBlocks(this),this.textEditor=new BlockMirrorTextEditor(this),this.blockEditor=new BlockMirrorBlockEditor(this),this.setMode(this.configuration.viewMode)}function BlockMirrorTextEditor(blockMirror){var _this=this;this.blockMirror=blockMirror,this.textContainer=blockMirror.tags.textContainer,this.textArea=blockMirror.tags.textArea,this.textSidebar=blockMirror.tags.textSidebar,this.highlightedHandles=[],this.silentEvents_=!1,this.outOfDate_=null,this.updateTimer_=null;var codeMirrorOptions={mode:{name:"python",version:3,singleLineStringErrors:!1},readOnly:blockMirror.configuration.readOnly,showCursorWhenSelecting:!0,lineNumbers:!0,firstLineNumber:1,indentUnit:4,tabSize:4,indentWithTabs:!1,matchBrackets:!0,extraKeys:{Tab:"indentMore","Shift-Tab":"indentLess","Ctrl-Enter":blockMirror.run,Esc:function Esc(cm){cm.getOption("fullScreen")?cm.setOption("fullScreen",!1):cm.display.input.blur()},F11:function F11(cm){cm.setOption("fullScreen",!cm.getOption("fullScreen"))}},foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"]};this.codeMirror=CodeMirror.fromTextArea(this.textArea,codeMirrorOptions),this.codeMirror.on("change",this.changed.bind(this)),this.codeMirror.setSize(null,"100%"),this.imageMarkers=[],this.textContainer.style.border="1px solid lightgray",this.textContainer.style.float="left",this.updateWidth(),this.textContainer.style.height=blockMirror.configuration.height,this.textSidebar.style.height="100%",this.textSidebar.style.float="left",this.textSidebar.style.backgroundColor="#ddd",window.addEventListener("resize",this.resizeResponsively.bind(this),!1),this.codeMirror.on("beforeChange",(function(cm,change){if(_this.blockMirror.configuration.imageMode&&"paste"===change.origin){var oldText=change.text[0];if(_this.isImageUrl(oldText)){var newText=_this.blockMirror.configuration.imageLiteralHook(oldText);change.update(null,null,[newText])}}})),this.codeMirror.on("change",(function(cm,change){var lastLine;_this.blockMirror.configuration.imageMode&&(lastLine="paste"===change.origin||"setValue"===change.origin?change.from.line+change.text.length:Math.max(1+change.to.line,change.text.length),_this.updateImages(cm,change.from.line,lastLine))})),this.codeMirror.on("paste",(function(cm,event){if(_this.blockMirror.configuration.imageMode)for(var items=(event.clipboardData||event.originalEvent.clipboardData).items,index=0;index<items.length;index+=1){var item=items[index];if("file"===item.kind){var blob=item.getAsFile(),promise;_this.blockMirror.configuration.imageUploadHook(blob,item).then((function(newUrl){var doc=cm.getDoc();doc.replaceRange(newUrl,doc.getCursor("from"),doc.getCursor("to"))})),event.preventDefault()}}}))}Blockly.Python.init=function(workspace){Blockly.Python.PASS=this.INDENT+"pass\n",Blockly.Python.definitions_=Object.create(null),Blockly.Python.functionNames_=Object.create(null),Blockly.Python.imported_=Object.create(null),Blockly.Python.variableDB_?Blockly.Python.variableDB_.reset():Blockly.Python.variableDB_=new Blockly.Names(Blockly.Python.RESERVED_WORDS_),Blockly.Python.variableDB_.setVariableMap(workspace.getVariableMap());var defvars=[]},Blockly.Python.finish=function(code){var imports=[],definitions=[];for(var name in Blockly.Python.definitions_){var def=Blockly.Python.definitions_[name];name in Blockly.Python.imported_||(def.match(/^(from\s+\S+\s+)?import\s+\S+/)?imports.push(def):definitions.push(def))}return delete Blockly.Python.definitions_,delete Blockly.Python.functionNames_,Blockly.Python.variableDB_.reset(),imports.length?imports.join("\n")+"\n\n"+code:code},Blockly.Python.INDENT="    ",Blockly.Python.RESERVED_WORDS_="False,None,True,and,as,assert,break,class,continue,def,del,elif,else,except,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,raise,return,try,while,with,yield",Blockly.Python.scrubNakedValue=function(line){return line},Blockly.Variables.flyoutCategoryBlocks=function(workspace){var variableModelList=workspace.getVariablesOfType(""),xmlList=[];if(variableModelList.length>0){var mostRecentVariableFieldXmlString=variableModelList[variableModelList.length-1];if(!Blockly.Variables._HIDE_GETTERS_SETTERS&&Blockly.Blocks.ast_Assign){var gap,blockText='<xml><block type="ast_Assign" gap="'+(gap=Blockly.Blocks.ast_AugAssign?8:24)+'">'+mostRecentVariableFieldXmlString+"</block></xml>",block=Blockly.Xml.textToDom(blockText).firstChild;xmlList.push(block)}if(!Blockly.Variables._HIDE_GETTERS_SETTERS&&Blockly.Blocks.ast_AugAssign){var gap,blockText='<xml><block type="ast_AugAssign" gap="'+(gap=Blockly.Blocks.ast_Name?20:8)+'">'+mostRecentVariableFieldXmlString+'<value name="VALUE"><shadow type="ast_Num"><field name="NUM">1</field></shadow></value><mutation options="false" simple="true"></mutation></block></xml>',block=Blockly.Xml.textToDom(blockText).firstChild;xmlList.push(block)}if(Blockly.Blocks.ast_Name){variableModelList.sort(Blockly.VariableModel.compareByName);for(var i=0,variable;variable=variableModelList[i];i++)if(Blockly.Variables._HIDE_GETTERS_SETTERS)(block=Blockly.utils.xml.createElement("label")).setAttribute("text",variable.name),block.setAttribute("web-class","blockmirror-toolbox-variable"),xmlList.push(block);else{var _block=Blockly.utils.xml.createElement("block");_block.setAttribute("type","ast_Name"),_block.setAttribute("gap",8),_block.appendChild(Blockly.Variables.generateVariableFieldDom(variable)),xmlList.push(_block)}}}return xmlList},Blockly.VariableModel.compareByName=function(var1,var2){var name1=var1.name,name2=var2.name;return name1<name2?-1:name1===name2?0:1},Blockly.Names.prototype.getName=function(name,type){if(type==Blockly.VARIABLE_CATEGORY_NAME){var varName=this.getNameForUserVariable_(name);varName&&(name=varName)}var normalized=name+"_"+type,isVarType,prefix=type==Blockly.VARIABLE_CATEGORY_NAME||type==Blockly.Names.DEVELOPER_VARIABLE_TYPE?this.variablePrefix_:"";if(normalized in this.db_)return prefix+this.db_[normalized];var safeName=this.getDistinctName(name,type);return this.db_[normalized]=safeName.substr(prefix.length),safeName},Blockly.Names.equals=function(name1,name2){return name1==name2},Blockly.Variables.nameUsedWithOtherType_=function(name,type,workspace){for(var allVariables=workspace.getVariableMap().getAllVariables(),i=0,variable;variable=allVariables[i];i++)if(variable.name==name&&variable.type!=type)return variable;return null},Blockly.Variables.nameUsedWithAnyType_=function(name,workspace){for(var allVariables=workspace.getVariableMap().getAllVariables(),i=0,variable;variable=allVariables[i];i++)if(variable.name==name)return variable;return null},BlockMirror.prototype.validateConfiguration=function(configuration){if(this.configuration={},!("container"in configuration))throw new Error('Invalid configuration: Missing "container" property.');this.configuration.container=configuration.container,this.configuration.blocklyMediaPath="blocklyMediaPath"in configuration?configuration.blocklyMediaPath:"../../blockly/media/",this.configuration.run="run"in configuration?configuration.run:function(){console.log("Ran!")},this.configuration.readOnly=configuration.readOnly||!1,this.configuration.height=configuration.height||500,this.configuration.viewMode=configuration.viewMode||"split",this.configuration.skipSkulpt=configuration.skipSkulpt||!1,this.configuration.blockDelay=configuration.blockDelay||!1,this.configuration.toolbox=configuration.toolbox||"normal",this.isParsons=function(){return!1},this.configuration.imageUploadHook=configuration.imageUploadHook||function(old){return Promise.resolve(old)},this.configuration.imageDownloadHook=configuration.imageDownloadHook||function(old){return old},this.configuration.imageLiteralHook=configuration.imageLiteralHook||function(old){return old},this.configuration.imageDetection=configuration.imageDetection||"string",this.configuration.imageMode=configuration.imageMode||!1},BlockMirror.prototype.initializeVariables=function(){for(var name in this.tags={toolbar:document.createElement("div"),blockContainer:document.createElement("div"),blockEditor:document.createElement("div"),blockArea:document.createElement("div"),textSidebar:document.createElement("div"),textContainer:document.createElement("div"),textArea:document.createElement("textarea")},this.configuration.container.appendChild(this.tags.toolbar),this.configuration.container.appendChild(this.tags.blockContainer),this.tags.blockContainer.appendChild(this.tags.blockEditor),this.tags.blockContainer.appendChild(this.tags.blockArea),this.configuration.container.appendChild(this.tags.textContainer),this.tags.textContainer.appendChild(this.tags.textSidebar),this.tags.textContainer.appendChild(this.tags.textArea),this.tags)this.tags[name].style["box-sizing"]="border-box";this.code_="",this.mode_=null,this.silenceBlock=!1,this.silenceBlockTimer=null,this.silenceText=!1,this.silenceModel=0,this.blocksFailed=!1,this.blocksFailedTimeout=null,this.triggerOnChange=null,this.firstEdit=!0,this.blocklyToolboxWidth=0,this.listeners_=[]},BlockMirror.prototype.loadSkulpt=function(){Sk.configure({__future__:Sk.python3,read:function read(filename){if(void 0===Sk.builtinFiles||void 0===Sk.builtinFiles.files[filename])throw"File not found: '"+filename+"'";return Sk.builtinFiles.files[filename]}})},BlockMirror.prototype.removeAllChangeListeners=function(){this.listeners_.length=0},BlockMirror.prototype.removeChangeListener=function(callback){var index=this.listeners_.indexOf(callback);-1!==index&&this.listeners_.splice(index,1)},BlockMirror.prototype.addChangeListener=function(callback){this.listeners_.push(callback)},BlockMirror.prototype.fireChangeListener=function(event){for(var i=0,func;func=this.listeners_[i];i++)func(event)},BlockMirror.prototype.setCode=function(code,quietly){this.code_=code,quietly||(this.blockEditor.setCode(code,!0),this.textEditor.setCode(code,!0)),this.fireChangeListener({name:"changed",value:code})},BlockMirror.prototype.getCode=function(){return this.code_},BlockMirror.prototype.getMode=function(){return this.mode_},BlockMirror.prototype.setMode=function(mode){this.mode_=mode,this.blockEditor.setMode(mode),this.textEditor.setMode(mode)},BlockMirror.prototype.setImageMode=function(imageMode){this.configuration.imageMode=imageMode,imageMode?this.textEditor.enableImages():this.textEditor.disableImages(),console.log(imageMode)},BlockMirror.prototype.setReadOnly=function(isReadOnly){this.textEditor.setReadOnly(isReadOnly),this.blockEditor.setReadOnly(isReadOnly),$(this.configuration.container).toggleClass("block-mirror-read-only",isReadOnly)},BlockMirror.prototype.refresh=function(){this.blockEditor.resized(),this.textEditor.codeMirror.refresh()},BlockMirror.prototype.forceBlockRefresh=function(){this.blockEditor.setCode(this.code_,!0)},BlockMirror.prototype.VISIBLE_MODES={block:["block","split"],text:["text","split"]},BlockMirror.prototype.BREAK_WIDTH=675,BlockMirror.prototype.setHighlightedLines=function(lines,style){this.textEditor.setHighlightedLines(lines,style)},BlockMirror.prototype.clearHighlightedLines=function(){this.textEditor.clearHighlightedLines()},BlockMirrorTextEditor.prototype.enableImages=function(){var doc=this.codeMirror.getDoc();this.updateImages(this.codeMirror,doc.firstLine(),1+doc.lastLine())},BlockMirrorTextEditor.prototype.disableImages=function(){this.imageMarkers.map((function(imageMarker){return imageMarker.clear()})),this.imageMarkers=this.imageMarkers.filter((function(i){return i.find()}))},BlockMirrorTextEditor.prototype.makeImageWidget=function(url){var newImage=document.createElement("IMG");newImage.setAttribute("src",url),newImage.style.display="none",newImage.style.maxHeight="100px",newImage.setAttribute("title",url),newImage.onclick=function(x){newImage.hasAttribute("width")?(newImage.removeAttribute("height"),newImage.removeAttribute("width")):(newImage.setAttribute("height","40"),newImage.setAttribute("width","40"))};var newSpan=document.createElement("span");return newSpan.className="cm-string",newSpan.innerText=JSON.stringify(url),newSpan.onmouseover=function(x){newImage.style.display="block"},newSpan.onmouseout=function(x){newImage.style.display="none"},newSpan.appendChild(newImage),newSpan},BlockMirrorTextEditor.prototype.updateImages=function(cm,from,to){var _this2=this;cm.doc.eachLine(from,to,(function(line){for(var match,regex=BlockMirrorTextEditor.REGEX_PATTERNS[_this2.blockMirror.configuration.imageDetection];null!==(match=regex.exec(line.text));){var imageWidget=_this2.makeImageWidget(match[3]),offset=match[0].length-match[1].length,imageMarker=cm.markText({line:cm.doc.getLineNumber(line),ch:match.index+offset},{line:cm.doc.getLineNumber(line),ch:match.index+match[1].length+offset},{className:"bm-hyperlinked-image",attributes:{"data-url":match[3]},inclusiveLeft:!1,inclusiveRight:!1});console.log(imageMarker),_this2.imageMarkers.push(imageMarker)}}))};var FULL_IMAGE_URL=/^(?:http(s)?:\/\/)?[\w.-]+(?:\.[\w\.-]+)+[\w\-\._~:/?#[\]@!$&'\(\)\*\+,;=.]+(?:png|jpg|jpeg|gif|svg|mp4)+$/,STRING_IMAGE_URL=/((["'])((?:blob:null\/[A-Fa-f0-9-]+)|(?:(?:https?:\/\/)?[\w.-]+(?:\.?[\w\.-]+)+[\w\-\._~:/?#[\]@!$&'\(\)\*\+,;=.]+(?:png|jpg|jpeg|gif|svg)+)|(?:data:image\/(?:png|jpg|jpeg|gif|svg\+xml|webp|bmp)(?:;charset=utf-8)?;base64,(?:[A-Za-z0-9]|[+/])+={0,2}))\2)/g,CONSTRUCTOR_IMAGE_URL=/(?:^|\W)(Image\((["'])(.+?)\2\))/g;function BlockMirrorBlockEditor(blockMirror){this.blockMirror=blockMirror,this.blockContainer=blockMirror.tags.blockContainer,this.blockEditor=blockMirror.tags.blockEditor,this.blockArea=blockMirror.tags.blockArea,this.outOfDate_=null,this.loadBlocklyCSS();var blocklyOptions={media:blockMirror.configuration.blocklyMediaPath,zoom:{controls:!0},comments:!1,disable:!1,oneBasedIndex:!1,readOnly:blockMirror.configuration.readOnly,scrollbars:!0,toolbox:this.makeToolbox()};this.workspace=Blockly.inject(blockMirror.tags.blockEditor,blocklyOptions),this.workspace.addChangeListener(this.changed.bind(this)),this.blockContainer.style.float="left",this.blockEditor.style.position="absolute",this.blockEditor.style.width="100%",this.blockArea.style.height=blockMirror.configuration.height+"px",this.readOnlyDiv_=null,window.addEventListener("resize",this.resized.bind(this),!1),this.resized()}function BlockMirrorTextToBlocks(blockMirror){this.blockMirror=blockMirror,this.hiddenImports=["plt"],this.strictAnnotations=["int","float","str","bool"],Blockly.defineBlocksWithJsonArray(BlockMirrorTextToBlocks.BLOCKS)}function arrayMax(array){return array.reduce((function(a,b){return Math.max(a,b)}))}function arrayMin(array){return array.reduce((function(a,b){return Math.min(a,b)}))}function makeTurtleBlock(name,returns,values,message,aliases){BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.turtle[name]={returns:returns,simple:values,message:message,colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},aliases&&aliases.forEach((function(alias){BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.turtle[alias]=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.turtle[name]}))}BlockMirrorTextEditor.REGEX_PATTERNS={constructor:CONSTRUCTOR_IMAGE_URL,string:STRING_IMAGE_URL,none:!1},BlockMirrorTextEditor.prototype.isImageUrl=function(url){return url.match(FULL_IMAGE_URL)},BlockMirrorTextEditor.prototype.defocus=function(){this.codeMirror.display.input.blur()},BlockMirrorTextEditor.prototype.updateWidth=function(){},BlockMirrorTextEditor.prototype.setReadOnly=function(isReadOnly){this.codeMirror.setOption("readOnly",isReadOnly)},BlockMirrorTextEditor.prototype.VIEW_CONFIGURATIONS={split:{width:"40%",visible:!0,indentSidebar:!1},text:{width:"100%",visible:!0,indentSidebar:!0},block:{width:"0%",visible:!1,indentSidebar:!1}},BlockMirrorTextEditor.prototype.resizeResponsively=function(){var mode=this.blockMirror.mode_,configuration,width=this.VIEW_CONFIGURATIONS[mode].width,height=this.blockMirror.configuration.height;"split"===mode?window.innerWidth>=this.blockMirror.BREAK_WIDTH?(this.textContainer.style.width=width,this.textContainer.style.height=height+"px"):(this.textContainer.style.width="100%",this.textContainer.style.height=height/2+"px"):(this.textContainer.style.width=width,this.textContainer.style.height=height+"px")},BlockMirrorTextEditor.prototype.setMode=function(mode){mode=mode.toLowerCase();var configuration=this.VIEW_CONFIGURATIONS[mode];null!==this.outOfDate_&&this.isVisible()&&this.setCode(this.outOfDate_,!0),this.resizeResponsively(),configuration.visible?(this.textContainer.style.display="block",this.codeMirror.getWrapperElement().style.display="block",this.codeMirror.refresh()):(this.textContainer.style.height="0%",this.textContainer.style.display="none",this.codeMirror.getWrapperElement().style.display="none"),this.updateGutter(configuration)},BlockMirrorTextEditor.prototype.updateGutter=function(configuration){if(void 0===configuration){var mode=this.blockMirror.mode_.toLowerCase();configuration=this.VIEW_CONFIGURATIONS[mode]}var isBigWindow=window.innerWidth>=this.blockMirror.BREAK_WIDTH;if(configuration.indentSidebar&&isBigWindow){var gutters,gutterWidth=this.textContainer.querySelector(".CodeMirror-gutters").offsetWidth,toolbarWidth,newGutterWidth=this.blockMirror.blockEditor.getToolbarWidth()-gutterWidth-2;this.textSidebar.style.width=newGutterWidth+"px",this.textSidebar.style.display="block"}else this.textSidebar.style.display="none",this.textSidebar.style.width="0px"},BlockMirrorTextEditor.prototype.setCode=function(code,quietly){this.silentEvents_=quietly,code=void 0===code||""===code.trim()?"\n":code,this.isVisible()?(this.codeMirror.setValue(code),this.outOfDate_=null):this.outOfDate_=code},BlockMirrorTextEditor.prototype.getCode=function(){return this.codeMirror.getValue()},BlockMirrorTextEditor.prototype.changed=function(codeMirror,event){var _this3=this;if(!this.silentEvents_){var handleChange=function handleChange(){var newCode=_this3.getCode();_this3.blockMirror.blockEditor.setCode(newCode,!0),_this3.blockMirror.setCode(newCode,!0)};!1===this.blockMirror.configuration.blockDelay?handleChange():(null!==this.updateTimer_&&clearTimeout(this.updateTimer_),this.updateTimer_=setTimeout(handleChange,this.blockMirror.configuration.blockDelay))}this.silentEvents_=!1},BlockMirrorTextEditor.prototype.isVisible=function(){return-1!==this.blockMirror.VISIBLE_MODES.text.indexOf(this.blockMirror.mode_)},BlockMirrorTextEditor.prototype.setHighlightedLines=function(lines,style){var _this4=this,handles=lines.map((function(l){return{handle:_this4.codeMirror.doc.addLineClass(l-1,"background",style),style:style}}));this.highlightedHandles=this.highlightedHandles.concat(handles)},BlockMirrorTextEditor.prototype.clearHighlightedLines=function(){var _this5=this;if(this.highlightedHandles){var removed=this.highlightedHandles.map((function(h){_this5.codeMirror.doc.removeLineClass(h.handle,"background",h.style);var info=_this5.codeMirror.doc.lineInfo(h.handle);return info?info.line+1:info}));return this.highlightedHandles=[],removed}},BlockMirrorBlockEditor.prototype.resizeReadOnlyDiv=function(){if(null!==this.readOnlyDiv_){this.isVisible()||(this.readOnlyDiv_.css("left","0px"),this.readOnlyDiv_.css("top","0px"),this.readOnlyDiv_.css("width","0px"),this.readOnlyDiv_.css("height","0px"));var blockArea=this.blockMirror.tags.blockArea,current=blockArea,x=0,y=0;do{x+=current.offsetLeft,y+=current.offsetTop,current=current.offsetParent}while(current);this.readOnlyDiv_.css("left",x+"px"),this.readOnlyDiv_.css("top",y+"px"),this.readOnlyDiv_.css("width",blockArea.offsetWidth+"px"),this.readOnlyDiv_.css("height",blockArea.offsetHeight+"px")}},BlockMirrorBlockEditor.prototype.setReadOnly=function(isReadOnly){isReadOnly?(null===this.readOnlyDiv_&&(this.readOnlyDiv_=$("<div class='blockly-readonly-layer'></div>"),$("body").append(this.readOnlyDiv_)),this.resizeReadOnlyDiv()):null!==this.readOnlyDiv_&&(this.readOnlyDiv_.remove(),this.readOnlyDiv_=null)},BlockMirrorBlockEditor.prototype.updateWidth=function(){var newWidth="0%";this.resized()},BlockMirrorBlockEditor.prototype.resized=function(e){this.resizeResponsively();var blockArea=this.blockMirror.tags.blockArea,blockEditor=this.blockMirror.tags.blockEditor;blockEditor.style.width=blockArea.offsetWidth+"px",blockEditor.style.height=blockArea.offsetHeight+"px",Blockly.svgResize(this.workspace),this.resizeReadOnlyDiv()},BlockMirrorBlockEditor.prototype.toolboxPythonToBlocks=function(toolboxPython){var _this6=this;return Blockly.Variables._HIDE_GETTERS_SETTERS=!1,toolboxPython.map((function(category){if("string"==typeof category)return category;var colour=BlockMirrorTextToBlocks.COLOR[category.colour],header='<category name="'.concat(category.name,'" colour="').concat(colour,'"');category.custom?header+=' custom="'.concat(category.custom,'">'):header+=">";var body=(category.blocks||[]).map((function(code){var result;return _this6.blockMirror.textToBlocks.convertSource("toolbox.py",code).rawXml.innerHTML.toString()})).join("\n"),footer="</category>";return category.hideGettersSetters&&(Blockly.Variables._HIDE_GETTERS_SETTERS=!0),[header,body,footer].join("\n")})).join("\n")},BlockMirrorBlockEditor.prototype.makeToolbox=function(){var toolbox=this.blockMirror.configuration.toolbox;for(var name in toolbox in this.TOOLBOXES&&(toolbox=this.TOOLBOXES[toolbox]),"string"!=typeof toolbox&&(toolbox=this.toolboxPythonToBlocks(toolbox)),BlockMirrorBlockEditor.EXTRA_TOOLS)toolbox+=BlockMirrorBlockEditor.EXTRA_TOOLS[name];return'<xml id="toolbox" style="display:none">'+toolbox+"</xml>"},BlockMirrorBlockEditor.prototype.remakeToolbox=function(){this.workspace.updateToolbox(this.makeToolbox()),this.resized()},BlockMirrorBlockEditor.prototype.getToolbarWidth=function(){return this.blockMirror.configuration.readOnly?0:this.workspace.toolbox_.width},BlockMirrorBlockEditor.prototype.VIEW_CONFIGURATIONS={split:{width:"60%",visible:!0},block:{width:"100%",visible:!0},text:{width:"0%",visible:!1}},BlockMirrorBlockEditor.prototype.resizeResponsively=function(){var mode=this.blockMirror.mode_,configuration=this.VIEW_CONFIGURATIONS[mode];"split"===mode?window.innerWidth>=this.blockMirror.BREAK_WIDTH?(this.blockContainer.style.width=configuration.width,this.blockContainer.style.height=this.blockMirror.configuration.height+"px",this.blockArea.style.height=this.blockMirror.configuration.height+"px"):(this.blockContainer.style.width="100%",this.blockContainer.style.height=this.blockMirror.configuration.height/2+"px",this.blockArea.style.height=this.blockMirror.configuration.height/2+"px"):"block"===mode&&(this.blockContainer.style.width=configuration.width,this.blockContainer.style.height=this.blockMirror.configuration.height+"px",this.blockArea.style.height=this.blockMirror.configuration.height+"px")},BlockMirrorBlockEditor.prototype.setMode=function(mode){mode=mode.toLowerCase();var configuration=this.VIEW_CONFIGURATIONS[mode];this.workspace.setVisible(configuration.visible),configuration.visible?(this.blockEditor.style.width="100%",this.resized()):(this.blockContainer.style.height="0%",this.blockArea.style.height="0%",this.resizeReadOnlyDiv()),null!==this.outOfDate_&&this.isVisible()&&this.setCode(this.outOfDate_,!0)},BlockMirrorBlockEditor.prototype.getCode=function(){return Blockly.Python.workspaceToCode(this.workspace)},BlockMirrorBlockEditor.prototype.setCode=function(code,quietly){if(this.isVisible()){var result=this.blockMirror.textToBlocks.convertSource("__main__.py",code);quietly&&Blockly.Events.disable();try{var xml_code=Blockly.Xml.textToDom(result.xml);this.workspace.clear(),Blockly.Xml.domToWorkspace(xml_code,this.workspace),this.blockMirror.isParsons()?this.workspace.shuffle():this.workspace.cleanUp()}catch(error){console.error(error)}quietly?Blockly.Events.enable():this.blockMirror.setCode(code,!0),this.outOfDate_=null}else this.outOfDate_=code},BlockMirrorBlockEditor.prototype.BLOCKLY_CHANGE_EVENTS=[Blockly.Events.CREATE,Blockly.Events.DELETE,Blockly.Events.CHANGE,Blockly.Events.MOVE,Blockly.Events.VAR_RENAME],BlockMirrorBlockEditor.prototype.changed=function(event){if((void 0===event||-1!==this.BLOCKLY_CHANGE_EVENTS.indexOf(event.type))&&!this.workspace.isDragging()){var newCode=this.getCode();this.blockMirror.textEditor.setCode(newCode,!0),this.blockMirror.setCode(newCode,!0)}},BlockMirrorBlockEditor.prototype.isVisible=function(){return-1!==this.blockMirror.VISIBLE_MODES.block.indexOf(this.blockMirror.mode_)},BlockMirrorBlockEditor.prototype.DOCTYPE='<?xml version="1.0" standalone="no"?> <!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">',BlockMirrorBlockEditor.prototype.BLOCKLY_LOADED_CSS=null,BlockMirrorBlockEditor.prototype.loadBlocklyCSS=function(){if(null===this.BLOCKLY_LOADED_CSS){var result=[".blocklyDraggable {}"];result=result.concat(Blockly.Css.CONTENT),Blockly.FieldDate&&(result=result.concat(Blockly.FieldDate.CSS)),result=(result=result.join("\n")).replace(/<<<PATH>>>/g,Blockly.Css.mediaPath_),this.BLOCKLY_LOADED_CSS=result}},BlockMirrorBlockEditor.prototype.getPngFromBlocks=function(callback){try{this.loadBlocklyCSS();var blocks=this.workspace.svgBlockCanvas_.cloneNode(!0);if(blocks.removeAttribute("width"),blocks.removeAttribute("height"),void 0!==blocks.childNodes[0]){blocks.removeAttribute("transform"),blocks.childNodes[0].removeAttribute("transform"),blocks.childNodes[0].childNodes[0].removeAttribute("transform");var linkElm=document.createElementNS("http://www.w3.org/1999/xhtml","style");linkElm.textContent=this.BLOCKLY_LOADED_CSS+"\n\n",blocks.insertBefore(linkElm,blocks.firstChild);var bbox=document.getElementsByClassName("blocklyBlockCanvas")[0].getBBox(),xml=(new XMLSerializer).serializeToString(blocks);xml='<svg version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="'+bbox.width+'" height="'+bbox.height+'" viewBox="0 0 '+bbox.width+" "+bbox.height+'"><rect width="100%" height="100%" fill="white"></rect>'+xml+"</svg>";var url="data:image/svg+xml;base64,"+btoa(unescape(encodeURIComponent(xml))),img=document.createElement("img");img.style.display="block",img.onload=function(){var canvas=document.createElement("canvas");if(canvas.width=bbox.width,canvas.height=bbox.height,canvas.width&&canvas.height){var ctx,canvasUrl;canvas.getContext("2d").drawImage(img,0,0);try{canvasUrl=canvas.toDataURL("image/png")}catch(e){canvasUrl=url}img.onload=null,callback(canvasUrl,img)}else callback("",img)},img.onerror=function(){callback("",img)},img.setAttribute("src",url)}else callback("",document.createElement("img"))}catch(e){callback("",document.createElement("img")),console.error("PNG image creation not supported!",e)}},BlockMirrorBlockEditor.prototype.highlightLines=function(lines,style){},BlockMirrorTextToBlocks.xmlToString=function(xml){return(new XMLSerializer).serializeToString(xml)},BlockMirrorTextToBlocks.prototype.convertSourceToCodeBlock=function(python_source){var xml=document.createElement("xml");return xml.appendChild(BlockMirrorTextToBlocks.raw_block(python_source)),BlockMirrorTextToBlocks.xmlToString(xml)},BlockMirrorTextToBlocks.prototype.convertSource=function(filename,python_source){var xml=document.createElement("xml"),parse,ast=null,symbol_table,error,badChunks=[],originalSource=python_source;this.source=python_source.split("\n");for(var previousLine=1+this.source.length;null===ast;){if(""===python_source.trim())return badChunks.length&&xml.appendChild(BlockMirrorTextToBlocks.raw_block(badChunks.join("\n"))),{xml:BlockMirrorTextToBlocks.xmlToString(xml),error:null,rawXml:xml};try{parse=Sk.parse(filename,python_source),ast=Sk.astFromParse(parse.cst,filename,parse.flags)}catch(e){if(error=e,!(e.traceback&&e.traceback.length&&e.traceback[0].lineno&&e.traceback[0].lineno<previousLine))return xml.appendChild(BlockMirrorTextToBlocks.raw_block(originalSource)),{xml:BlockMirrorTextToBlocks.xmlToString(xml),error:error,rawXml:xml};previousLine=e.traceback[0].lineno-1,badChunks=badChunks.concat(this.source.slice(previousLine)),this.source=this.source.slice(0,previousLine),python_source=this.source.join("\n")}}for(var commentLocation in this.comments={},parse.comments){var lineColumn=commentLocation.split(","),yLocation=parseInt(lineColumn[0],10);this.comments[yLocation]=parse.comments[commentLocation]}this.highestLineSeen=0,this.levelIndex=0,this.nextExpectedLine=0,this.measureNode(ast);var converted=this.convert(ast);if(null!==converted)for(var block=0;block<converted.length;block+=1)xml.appendChild(converted[block]);return badChunks.length&&xml.appendChild(BlockMirrorTextToBlocks.raw_block(badChunks.join("\n"))),{xml:BlockMirrorTextToBlocks.xmlToString(xml),error:null,lineMap:this.lineMap,comments:this.comments,rawXml:xml}},BlockMirrorTextToBlocks.prototype.recursiveMeasure=function(node,nextBlockLine){if(void 0!==node){var myNext=nextBlockLine;if("orelse"in node&&node.orelse.length>0&&(myNext=1===node.orelse.length&&"If"===node.orelse[0]._astname?node.orelse[0].lineno-1:node.orelse[0].lineno-1-1),this.heights.push(nextBlockLine),"body"in node)for(var i=0;i<node.body.length;i++){var next=void 0;next=i+1===node.body.length?myNext:node.body[i+1].lineno-1,this.recursiveMeasure(node.body[i],next)}if("orelse"in node)for(var _i=0;_i<node.orelse.length;_i++){var _next=void 0;_next=_i===node.orelse.length?nextBlockLine:node.orelse[_i].lineno-1+1,this.recursiveMeasure(node.orelse[_i],_next)}}},BlockMirrorTextToBlocks.prototype.measureNode=function(node){this.heights=[],this.recursiveMeasure(node,this.source.length-1),this.heights.shift()},BlockMirrorTextToBlocks.prototype.getSourceCode=function(frm,to){var lines=this.source.slice(frm-1,to);if(lines.length>0)for(var indentation=lines[0].search(/\S/),i=0;i<lines.length;i++)lines[i]=lines[i].substring(indentation);return lines.join("\n")},BlockMirrorTextToBlocks.prototype.convertBody=function(node,parent){this.levelIndex+=1;var is_top_level=this.isTopLevel(parent),children=[],root=null,current=null,levelIndex=this.levelIndex;function addPeer(peer){null==root?children.push(peer):children.push(root),root=peer,current=peer}function finalizePeers(){null!=root&&children.push(root)}function nestChild(child){if(null==root)root=child,current=child;else if(null==current)root=current;else{var nextElement=document.createElement("next");nextElement.appendChild(child),current.appendChild(nextElement),current=child}}for(var lineNumberInBody=0,lineNumberInProgram,previousLineInProgram=null,distance,skipped_line,commentCount,previousHeight=null,previousWasStatement=!1,visitedFirstLine=!1,wasFirstLine=!1,i=0;i<node.length;i++){for(var _commentLineInProgram in lineNumberInBody+=1,lineNumberInProgram=node[i].lineno,distance=0,wasFirstLine=!0,null!=previousLineInProgram&&(distance=lineNumberInProgram-previousLineInProgram-1,wasFirstLine=!1),lineNumberInBody+=distance,commentCount=0,this.comments)if(_commentLineInProgram<lineNumberInProgram){var commentChild=this.ast_Comment(this.comments[_commentLineInProgram],_commentLineInProgram);if(null==previousLineInProgram)nestChild(commentChild);else{var skipped_previous_line=Math.abs(previousLineInProgram-_commentLineInProgram)>1;is_top_level&&skipped_previous_line?addPeer(commentChild):nestChild(commentChild)}previousLineInProgram=_commentLineInProgram,this.highestLineSeen=Math.max(this.highestLineSeen,parseInt(_commentLineInProgram,10)),distance=lineNumberInProgram-previousLineInProgram,delete this.comments[_commentLineInProgram],commentCount+=1}distance=lineNumberInProgram-this.highestLineSeen,this.highestLineSeen=Math.max(lineNumberInProgram,this.highestLineSeen);var height=this.heights.shift(),originalSourceCode=this.getSourceCode(lineNumberInProgram,height),newChild=this.convertStatement(node[i],originalSourceCode,parent);null!=newChild&&(skipped_line=distance>1,previousLineInProgram=lineNumberInProgram,previousHeight=height,is_top_level&&newChild.constructor===Array?addPeer(newChild[0]):is_top_level&&skipped_line&&visitedFirstLine?addPeer(newChild):is_top_level&&!previousWasStatement?addPeer(newChild):nestChild(newChild),previousWasStatement=newChild.constructor!==Array,visitedFirstLine=!0)}var lastLineNumber=lineNumberInProgram+1;if(lastLineNumber in this.comments){var _commentChild=this.ast_Comment(this.comments[lastLineNumber],lastLineNumber);is_top_level&&!previousWasStatement?addPeer(_commentChild):nestChild(_commentChild),delete this.comments[lastLineNumber]}if(is_top_level)for(var commentLineInProgram in this.comments){var _commentChild2=this.ast_Comment(this.comments[commentLineInProgram],commentLineInProgram);distance=commentLineInProgram-previousLineInProgram,null==previousLineInProgram?addPeer(_commentChild2):distance>1?addPeer(_commentChild2):nestChild(_commentChild2),previousLineInProgram=commentLineInProgram,delete this.comments[lastLineNumber]}return finalizePeers(),this.levelIndex-=1,children},BlockMirrorTextToBlocks.prototype.TOP_LEVEL_NODES=["Module","Expression","Interactive","Suite"],BlockMirrorTextToBlocks.prototype.isTopLevel=function(parent){return!parent||-1!==this.TOP_LEVEL_NODES.indexOf(parent._astname)},BlockMirrorTextToBlocks.prototype.convert=function(node,parent){var functionName="ast_"+node._astname;if(void 0===this[functionName])throw new Error("Could not find function: "+functionName);return node._parent=parent,this[functionName](node,parent)},BlockMirrorTextToBlocks.prototype.convertStatement=function(node,full_source,parent){try{return this.convert(node,parent)}catch(e){var heights=this.getChunkHeights(node),extractedSource=this.getSourceCode(arrayMin(heights),arrayMax(heights));return console.error(e),BlockMirrorTextToBlocks.raw_block(extractedSource)}},BlockMirrorTextToBlocks.prototype.getChunkHeights=function(node){var lineNumbers=[];if(node.hasOwnProperty("lineno")&&lineNumbers.push(node.lineno),node.hasOwnProperty("body"))for(var i=0;i<node.body.length;i+=1){var subnode=node.body[i];lineNumbers=lineNumbers.concat(this.getChunkHeights(subnode))}if(node.hasOwnProperty("orelse"))for(var _i2=0;_i2<node.orelse.length;_i2+=1){var _subnode=node.orelse[_i2];lineNumbers=lineNumbers.concat(this.getChunkHeights(_subnode))}return lineNumbers},BlockMirrorTextToBlocks.create_block=function(type,lineNumber,fields,values,settings,mutations,statements){var newBlock=document.createElement("block");for(var setting in newBlock.setAttribute("type",type),newBlock.setAttribute("line_number",lineNumber),settings){var settingValue=settings[setting];newBlock.setAttribute(setting,settingValue)}if(void 0!==mutations&&Object.keys(mutations).length>0){var newMutation=document.createElement("mutation");for(var mutation in mutations){var mutationValue=mutations[mutation];if("@"===mutation.charAt(0))newMutation.setAttribute(mutation.substr(1),mutationValue);else if(null!=mutationValue&&mutationValue.constructor===Array)for(var i=0;i<mutationValue.length;i++){var mutationNode=document.createElement(mutation);mutationNode.setAttribute("name",mutationValue[i]),newMutation.appendChild(mutationNode)}else{var _mutationNode=document.createElement("arg");"!"===mutation.charAt(0)?_mutationNode.setAttribute("name",""):_mutationNode.setAttribute("name",mutation),null!==mutationValue&&_mutationNode.appendChild(mutationValue),newMutation.appendChild(_mutationNode)}}newBlock.appendChild(newMutation)}for(var field in fields){var fieldValue=fields[field],newField=document.createElement("field");newField.setAttribute("name",field),newField.appendChild(document.createTextNode(fieldValue)),newBlock.appendChild(newField)}for(var value in values){var valueValue=values[value],newValue=document.createElement("value");null!==valueValue&&(newValue.setAttribute("name",value),newValue.appendChild(valueValue),newBlock.appendChild(newValue))}if(void 0!==statements&&Object.keys(statements).length>0)for(var statement in statements){var statementValue=statements[statement];if(null!=statementValue)for(var _i3=0;_i3<statementValue.length;_i3+=1){var newStatement=document.createElement("statement");newStatement.setAttribute("name",statement),newStatement.appendChild(statementValue[_i3]),newBlock.appendChild(newStatement)}}return newBlock},BlockMirrorTextToBlocks.raw_block=function(txt){return BlockMirrorTextToBlocks.create_block("ast_Raw",0,{TEXT:txt})},BlockMirrorTextToBlocks.BLOCKS=[],BlockMirrorTextToBlocks.prototype.ast_Module=function(node){return this.convertBody(node.body,node)},BlockMirrorTextToBlocks.prototype.ast_Interactive=function(node){return this.convertBody(node.body,node)},BlockMirrorTextToBlocks.prototype.ast_Expression=BlockMirrorTextToBlocks.prototype.ast_Interactive,BlockMirrorTextToBlocks.prototype.ast_Suite=BlockMirrorTextToBlocks.prototype.ast_Module,BlockMirrorTextToBlocks.prototype.ast_Pass=function(){return null},BlockMirrorTextToBlocks.prototype.convertElements=function(key,values,parent){for(var output={},i=0;i<values.length;i++)output[key+i]=this.convert(values[i],parent);return output},Blockly.Python.blank="___",BlockMirrorTextToBlocks.prototype.LOCKED_BLOCK={inline:"true",deletable:"false",movable:"false"},BlockMirrorTextToBlocks.COLOR={VARIABLES:225,FUNCTIONS:210,OO:240,CONTROL:270,MATH:190,TEXT:120,FILE:170,PLOTTING:140,LOGIC:345,PYTHON:60,EXCEPTIONS:300,SEQUENCES:15,LIST:30,DICTIONARY:0,SET:10,TUPLE:20},BlockMirrorTextToBlocks.ast_Image=function(node,parent,bmttb){if(!bmttb.blockMirror.configuration.imageMode)throw"Not using image constructor";if(1!==node.args.length)throw"More than one argument to Image constructor";if("Str"!==node.args[0]._astname)throw"First argument for Image constructor must be string literal";return BlockMirrorTextToBlocks.create_block("ast_Image",node.lineno,{},{},{},{"@src":Sk.ffi.remapToJs(node.args[0].s)})},BlockMirrorTextToBlocks.prototype.FUNCTION_SIGNATURES={abs:{returns:!0,full:["x"],colour:BlockMirrorTextToBlocks.COLOR.MATH},all:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},any:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},ascii:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},bin:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},bool:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC,simple:["x"]},breakpoint:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},bytearray:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},bytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},callable:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},chr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},classmethod:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},compile:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},complex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},delattr:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},dict:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},dir:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},divmod:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},enumerate:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},eval:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},exec:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},filter:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},float:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH,simple:["x"]},format:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},frozenset:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},getattr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},globals:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},hasattr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},hash:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},help:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},hex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},id:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},Image:{custom:BlockMirrorTextToBlocks.ast_Image},input:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.FILE,simple:["prompt"]},int:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH,simple:["x"]},isinstance:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},issubclass:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},iter:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},len:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},list:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},locals:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},map:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},max:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},memoryview:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},min:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},next:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},object:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},oct:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},open:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.FILE},ord:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},pow:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},print:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.FILE,simple:["message"],full:["*messages","sep","end","file","flush"]},property:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},range:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES,simple:["stop"],full:["start","stop","step"]},repr:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},reversed:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},round:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH,full:["x","ndigits"],simple:["x"]},set:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},setattr:{returns:!1,full:["object","name","value"],colour:BlockMirrorTextToBlocks.COLOR.OO},slice:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},sorted:{full:["iterable","*","**key","**reverse"],simple:["iterable"],returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},staticmethod:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},str:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT,simple:["x"]},sum:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},super:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},tuple:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TUPLE},type:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},vars:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES},zip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},__import__:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON}},BlockMirrorTextToBlocks.prototype.METHOD_SIGNATURES={conjugate:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},trunc:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},floor:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},ceil:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},bit_length:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},to_bytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},from_bytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},as_integer_ratio:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},is_integer:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},hex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},fromhex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.MATH},__iter__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},__next__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},index:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},count:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},append:{returns:!1,full:["x"],message:"append",premessage:"to list",colour:BlockMirrorTextToBlocks.COLOR.LIST},clear:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},copy:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LIST},extend:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},insert:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},pop:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},remove:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES},reverse:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},sort:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.LIST},capitalize:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},casefold:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},center:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},encode:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},endswith:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},expandtabs:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},find:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},format:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},format_map:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isalnum:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isalpha:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isascii:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isdecimal:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isdigit:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isidentifier:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},islower:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isnumeric:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isprintable:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isspace:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},istitle:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},isupper:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},join:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},ljust:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},lower:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},lstrip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},maketrans:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},partition:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},replace:{returns:!0,full:["old","new","count"],simple:["old","new"],colour:BlockMirrorTextToBlocks.COLOR.TEXT},rfind:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rindex:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rjust:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rpartition:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rsplit:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},rstrip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},split:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},splitlines:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},startswith:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},strip:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},swapcase:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},title:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},translate:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},upper:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},zfill:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},decode:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.TEXT},__eq__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.LOGIC},tobytes:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},tolist:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},release:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},cast:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.PYTHON},isdisjoint:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},issubset:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},issuperset:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},union:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},intersection:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},difference:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},symmetric_difference:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.SET},update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},intersection_update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},difference_update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},symmetric_difference_update:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},add:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},discard:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.SET},fromkeys:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},get:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},items:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},keys:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},popitem:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},setdefault:{returns:!1,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},values:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.DICTIONARY},__enter__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.CONTROL},__exit__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.CONTROL},mro:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO},__subclasses__:{returns:!0,colour:BlockMirrorTextToBlocks.COLOR.OO}},BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_IMPORTS={plt:"import matplotlib.pyplot as plt",turtle:"import turtle"},BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES={cisc108:{assert_equal:{returns:!1,simple:["left","right"],message:"assert_equal",colour:BlockMirrorTextToBlocks.COLOR.PYTHON}},turtle:{},plt:{show:{returns:!1,simple:[],message:"show plot canvas",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},hist:{returns:!1,simple:["values"],message:"plot histogram",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},bar:{returns:!1,simple:["xs","heights","*tick_label"],message:"plot bar chart",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},plot:{returns:!1,simple:["values"],message:"plot line",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},boxplot:{returns:!1,simple:["values"],message:"plot boxplot",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},hlines:{returns:!1,simple:["y","xmin","xmax"],message:"plot horizontal line",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},vlines:{returns:!1,simple:["x","ymin","ymax"],message:"plot vertical line",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},scatter:{returns:!1,simple:["xs","ys"],message:"plot scatter",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},title:{returns:!1,simple:["label"],message:"make plot's title",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},xlabel:{returns:!1,simple:["label"],message:"make plot's x-axis label",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},ylabel:{returns:!1,simple:["label"],message:"make plot's y-axis label",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},xticks:{returns:!1,simple:["xs","labels","*rotation"],message:"make x ticks",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING},yticks:{returns:!1,simple:["ys","labels","*rotation"],message:"make y ticks",colour:BlockMirrorTextToBlocks.COLOR.PLOTTING}}},BlockMirrorTextToBlocks.prototype.FUNCTION_SIGNATURES.assert_equal=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.cisc108.assert_equal,makeTurtleBlock("forward",!1,["amount"],"move turtle forward by",["fd"]),makeTurtleBlock("backward",!1,["amount"],"move turtle backward by",["bd"]),makeTurtleBlock("right",!1,["angle"],"turn turtle right by",["rt"]),makeTurtleBlock("left",!1,["angle"],"turn turtle left by",["lt"]),makeTurtleBlock("goto",!1,["x","y"],"move turtle to position",["setpos","setposition"]),makeTurtleBlock("setx",!1,["x"],"set turtle's x position to ",[]),makeTurtleBlock("sety",!1,["y"],"set turtle's y position to ",[]),makeTurtleBlock("setheading",!1,["angle"],"set turtle's heading to ",["seth"]),makeTurtleBlock("home",!1,[],"move turtle to origin ",[]),makeTurtleBlock("circle",!1,["radius"],"move the turtle in a circle ",[]),makeTurtleBlock("dot",!1,["size","color"],"turtle draws a dot ",[]),makeTurtleBlock("stamp",!0,[],"stamp a copy of the turtle shape ",[]),makeTurtleBlock("clearstamp",!1,["stampid"],"delete stamp with id ",[]),makeTurtleBlock("clearstamps",!1,[],"delete all stamps ",[]),makeTurtleBlock("undo",!1,[],"undo last turtle action ",[]),makeTurtleBlock("speed",!0,["x"],"set or get turtle speed",[]),makeTurtleBlock("position",!0,[],"get turtle's position ",["pos"]),makeTurtleBlock("towards",!0,["x","y"],"get the angle from the turtle to the point ",[]),makeTurtleBlock("xcor",!0,[],"get turtle's x position ",[]),makeTurtleBlock("ycor",!0,[],"get turtle's y position ",[]),makeTurtleBlock("heading",!0,[],"get turtle's heading ",[]),makeTurtleBlock("distance",!0,["x","y"],"get the distance from turtle's position to ",[]),makeTurtleBlock("degrees",!1,[],"set turtle mode to degrees",[]),makeTurtleBlock("radians",!1,[],"set turtle mode to radians",[]),makeTurtleBlock("pendown",!1,[],"pull turtle pen down ",["pd","down"]),makeTurtleBlock("penup",!1,[],"pull turtle pen up ",["pu","up"]),makeTurtleBlock("pensize",!1,[],"set or get the pen size ",["width"]),makeTurtleBlock("pencolor",!1,[],"set or get the pen color ",[]),makeTurtleBlock("fillcolor",!1,[],"set or get the fill color ",[]),makeTurtleBlock("reset",!1,[],"reset drawing",[]),makeTurtleBlock("clear",!1,[],"clear drawing",[]),makeTurtleBlock("write",!1,["message"],"write text ",[]),makeTurtleBlock("bgpic",!1,["url"],"set background to ",[]),makeTurtleBlock("done",!1,[],"start the turtle loop ",["mainloop"]),makeTurtleBlock("setup",!1,["width","height"],"set drawing area size ",[]),makeTurtleBlock("title",!1,["message"],"set title of drawing area ",[]),makeTurtleBlock("bye",!1,[],"say goodbye to turtles ",[]),BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES["matplotlib.pyplot"]=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES.plt,BlockMirrorTextToBlocks.getFunctionBlock=function(name,values,module){var signature;void 0===values&&(values={});var method=!1;void 0!==module?signature=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_SIGNATURES[module][name]:name.startsWith(".")?(signature=BlockMirrorTextToBlocks.prototype.METHOD_SIGNATURES[name.substr(1)],method=!0):signature=BlockMirrorTextToBlocks.prototype.FUNCTION_SIGNATURES[name];for(var args=void 0!==signature.simple?signature.simple:void 0!==signature.full?signature.full:[],argumentsMutation={"@arguments":args.length,"@returns":signature.returns||!1,"@parameters":!0,"@method":method,"@name":module?module+"."+name:name,"@message":signature.message?signature.message:name,"@premessage":signature.premessage?signature.premessage:"","@colour":signature.colour?signature.colour:0,"@module":module||""},i=0;i<args.length;i+=1)argumentsMutation["UNKNOWN_ARG:"+i]=null;var newBlock=BlockMirrorTextToBlocks.create_block("ast_Call",null,{},values,{inline:!0},argumentsMutation);return BlockMirrorTextToBlocks.xmlToString(newBlock)};var ZERO_BLOCK=BlockMirrorTextToBlocks.create_block("ast_Num",null,{NUM:0});BlockMirrorBlockEditor.EXTRA_TOOLS={};var TOOLBOX_CATEGORY={VARIABLES:{name:"變數",colour:"VARIABLES",custom:"VARIABLE"},DECISIONS:{name:"邏輯",colour:"LOGIC",blocks:["if ___: pass","if ___: pass\nelse: pass","___ < ___","___ and ___","not ___"]},CALCULATIONS:{name:"數學",colour:"MATH",blocks:["___ + ___","round(___)"]},OUTPUT_WITH_PLOTTING:{name:"輸出",colour:"PLOTTING",blocks:["print(___)","plt.plot(___)","plt.scatter(___, ___)","plt.hist(___)","plt.bar(___, ___, tick_label=___)","plt.boxplot(___)","plt.show()","plt.title(___)","plt.xlabel(___)","plt.ylabel(___)","plt.hlines(___, ___, ___)","plt.vlines(___, ___, ___)"]},TURTLES:{name:"繪圖",colour:"PLOTTING",blocks:["turtle.mainloop()","turtle.forward(50)","turtle.backward(50)","turtle.right(90)","turtle.left(90)","turtle.goto(0, 0)","turtle.setx(100)","turtle.sety(100)","turtle.setheading(270)","turtle.pendown()","turtle.penup()","turtle.pencolor('blue')"]},INPUT:{name:"輸入",colour:"TEXT",blocks:["input('')"]},VALUES:{name:"值",colour:"TEXT",blocks:['""',"0","True"]},SEP:"<sep></sep>",CONVERSIONS:{name:"轉型",colour:"TEXT",blocks:["int(___)","float(___)","str(___)","bool(___)"]},DICTIONARIES:{name:"字典",colour:"DICTIONARY",blocks:["{'1st key': ___, '2nd key': ___, '3rd key': ___}","{}","___['key']"]}};BlockMirrorBlockEditor.prototype.TOOLBOXES={empty:[{name:"Empty Toolbox",colour:"PYTHON",blocks:[]}],minimal:[TOOLBOX_CATEGORY.VARIABLES],full:[TOOLBOX_CATEGORY.VARIABLES,TOOLBOX_CATEGORY.DECISIONS,{name:"邏輯",colour:"CONTROL",blocks:["for ___ in ___: pass","while ___: pass","break"]},{name:"函數",colour:"FUNCTIONS",blocks:["def ___(___): pass","def ___(___: int)->str: pass","return ___"]},TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.CALCULATIONS,TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,TOOLBOX_CATEGORY.INPUT,TOOLBOX_CATEGORY.TURTLES,TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.VALUES,TOOLBOX_CATEGORY.CONVERSIONS,{name:"串列",colour:"LIST",blocks:["[0, 0, 0]","[___, ___, ___]","[]","___.append(___)","range(0, 10)"]},TOOLBOX_CATEGORY.DICTIONARIES],ct:[TOOLBOX_CATEGORY.VARIABLES,TOOLBOX_CATEGORY.DECISIONS,{name:"Iteration",colour:"CONTROL",blocks:["for ___ in ___: pass"]},TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.CALCULATIONS,TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,TOOLBOX_CATEGORY.INPUT,TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.VALUES,TOOLBOX_CATEGORY.CONVERSIONS,{name:"Lists",colour:"LIST",blocks:["[0, 0, 0]","[___, ___, ___]","[]","___.append(___)"]}],normal:[TOOLBOX_CATEGORY.VARIABLES,{name:"Literal Values",colour:"LIST",blocks:["0","''","True","None","[___, ___, ___]","(___, ___, ___)","{___, ___, ___}","{___: ___, ___: ___, ___: ___}"]},{name:"Calculations",colour:"MATH",blocks:["-___","___ + ___","___ >> ___","abs(___)","round(___)"]},{name:"Logic",colour:"LOGIC",blocks:["___ if ___ else ___","___ == ___","___ < ___","___ in ___","___ and ___","not ___"]},TOOLBOX_CATEGORY.SEP,{name:"Classes",colour:"OO",blocks:["class ___: pass","class ___(___): pass","___.___","___: ___","super()"]},{name:"Functions",colour:"FUNCTIONS",blocks:["def ___(___): pass","def ___(___: int)->str: pass","return ___","yield ___","lambda ___: ___"]},{name:"Imports",colour:"PYTHON",blocks:["import ___","from ___ import ___","import ___ as ___","from ___ import ___ as ___"]},TOOLBOX_CATEGORY.SEP,{name:"Control Flow",colour:"CONTROL",blocks:["if ___: pass","if ___: pass\nelif ___: pass","if ___: pass\nelse: pass","for ___ in ___: pass","while ___: pass","break","continue","try: pass\nexcept ___ as ___: pass","raise ___","assert ___","with ___ as ___: pass"]},TOOLBOX_CATEGORY.SEP,TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,TOOLBOX_CATEGORY.INPUT,{name:"Files",colour:"FILE",blocks:["with open('', 'r') as ___: pass","___.read()","___.readlines()","___.write(___)","___.writelines(___)"]},TOOLBOX_CATEGORY.SEP,{name:"Conversion",colour:"TEXT",blocks:["int(___)","float(___)","str(___)","chr(___)","bool(___)","list(___)","dict(___)","tuple(___)","set(___)","type(___)","isinstance(___)"]},{name:"Builtin Functions",colour:"SEQUENCES",blocks:["len(___)","sorted(___)","enumerate(___)","reversed(___)","range(0, 10)","min(___, ___)","max(___, ___)","sum(___)","all(___)","any(___)","zip(___, ___)","map(___, ___)","filter(___, ___)"]},{name:"List Methods",colour:"LIST",blocks:["___.append(___)","___.pop()","___.clear()"]},{name:"String Methods",colour:"TEXT",blocks:["___.startswith('')","___.endswith('')","___.replace('', '')","___.lower('')","___.upper('')","___.title('')","___.strip('')","___.split('')","''.join(___)","___.format('')","___.strip('')"]},{name:"Subscripting",colour:"SEQUENCES",blocks:["___[___]","___[___:___]","___[___:___:___]"]},{name:"Generators",colour:"SEQUENCES",blocks:["[___ for ___ in ___]","(___ for ___ in ___)","{___ for ___ in ___}","{___: ___ for ___ in ___ if ___}","[___ for ___ in ___ if ___]","(___ for ___ in ___ if ___)","{___ for ___ in ___ if ___}","{___: ___ for ___ in ___ if ___}"]},{name:"註解",colour:"PYTHON",blocks:["# ",'"""\n"""']},{name:"測試",colour:"PYTHON",blocks:["global __"]}],ct2:[{name:"Memory",colour:"VARIABLES",custom:"VARIABLE",hideGettersSetters:!0},TOOLBOX_CATEGORY.SEP,'<category name="Expressions" expanded="true">',{name:"Constants",colour:"TEXT",blocks:['""',"0","True","[0, 0, 0]","[___, ___, ___]","[]"]},{name:"Variables",colour:"VARIABLES",blocks:["VARIABLE"]},TOOLBOX_CATEGORY.CALCULATIONS,TOOLBOX_CATEGORY.CONVERSIONS,{name:"Conditions",colour:"LOGIC",blocks:["___ == ___","___ and ___","not ___"]},TOOLBOX_CATEGORY.INPUT,"</category>",TOOLBOX_CATEGORY.SEP,'<category name="Operations" expanded="true">',{name:"Assignment",colour:"VARIABLES",blocks:["VARIABLE = ___","___.append(___)"]},TOOLBOX_CATEGORY.OUTPUT_WITH_PLOTTING,"</category>",TOOLBOX_CATEGORY.SEP,'<category name="Control" expanded="true">',{name:"Decision",colour:"CONTROL",blocks:["if ___: pass","if ___: pass\nelse: pass"]},{name:"Iteration",colour:"CONTROL",blocks:["for ___ in ___: pass"]},"</category>"]},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_For",message0:"for each item %1 in list %2 : %3 %4",args0:[{type:"input_value",name:"TARGET"},{type:"input_value",name:"ITER"},{type:"input_dummy"},{type:"input_statement",name:"BODY"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_ForElse",message0:"for each item %1 in list %2 : %3 %4 else: %5 %6",args0:[{type:"input_value",name:"TARGET"},{type:"input_value",name:"ITER"},{type:"input_dummy"},{type:"input_statement",name:"BODY"},{type:"input_dummy"},{type:"input_statement",name:"ELSE"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),Blockly.Python.ast_For=function(block){var argument0=Blockly.Python.valueToCode(block,"TARGET",Blockly.Python.ORDER_RELATIONAL)||Blockly.Python.blank,argument1=Blockly.Python.valueToCode(block,"ITER",Blockly.Python.ORDER_RELATIONAL)||Blockly.Python.blank,branchBody=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS,branchElse=Blockly.Python.statementToCode(block,"ELSE"),code="for "+argument0+" in "+argument1+":\n"+branchBody;return branchElse&&(code+="else:\n"+branchElse),code},Blockly.Python.controls_if_better=function(block){var n=0,code="",branchCode,conditionCode;do{code+=(0==n?"if ":"elif ")+(conditionCode=Blockly.Python.valueToCode(block,"IF"+n,Blockly.Python.ORDER_NONE)||"___")+":\n"+(branchCode=Blockly.Python.statementToCode(block,"DO"+n)||Blockly.Python.PASS),++n}while(block.getInput("IF"+n));return block.getInput("ELSE")&&(code+="else:\n"+(branchCode=Blockly.Python.statementToCode(block,"ELSE")||Blockly.Python.PASS)),code},BlockMirrorTextToBlocks.prototype.if_better=function(node,parent){var condition=node.test,body=node.consequent,elseBody=node.alternate,code="if "+BlockMirrorTextToBlocks.convert(condition)+":\n"+BlockMirrorTextToBlocks.convert(body);return elseBody&&(code+="else:\n"+BlockMirrorTextToBlocks.convert(elseBody)),code},BlockMirrorTextToBlocks.prototype.ast_For=function(node,parent){var target=node.target,iter=node.iter,body=node.body,orelse=node.orelse,blockName="ast_For",bodies={BODY:this.convertBody(body,node)};return orelse.length>0&&(blockName="ast_ForElse",bodies.ELSE=this.convertBody(orelse,node)),BlockMirrorTextToBlocks.create_block(blockName,node.lineno,{},{ITER:this.convert(iter,node),TARGET:this.convert(target,node)},{},{},bodies)},Blockly.Python.ast_ForElse=Blockly.Python.ast_For,BlockMirrorTextToBlocks.prototype.ast_ForElse=BlockMirrorTextToBlocks.prototype.ast_For,Blockly.Blocks.ast_If={init:function init(){this.orelse_=0,this.elifs_=0,this.appendValueInput("TEST").appendField(Blockly.Msg.AST_IF_TOOLTIP),this.appendStatementInput("BODY").setCheck(null).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.LOGIC),this.updateShape_()},updateShape_:function updateShape_(){for(var latestInput="BODY",i=0;i<this.elifs_;i++)this.getInput("ELIF"+i)||(this.appendValueInput("ELIFTEST"+i).appendField("elif"),this.appendStatementInput("ELIFBODY"+i).setCheck(null));for(;this.getInput("ELIFTEST"+i);)this.removeInput("ELIFTEST"+i),this.removeInput("ELIFBODY"+i),i++;for(this.orelse_&&!this.getInput("ELSE")?(this.appendDummyInput("ORELSETEST").appendField(Blockly.Msg.AST_ELSE_TOOLTIP),this.appendStatementInput("ORELSEBODY").setCheck(null)):!this.orelse_&&this.getInput("ELSE")&&(block.removeInput("ORELSETEST"),block.removeInput("ORELSEBODY")),i=0;i<this.elifs_;i++)this.orelse_?(this.moveInputBefore("ELIFTEST"+i,"ORELSETEST"),this.moveInputBefore("ELIFBODY"+i,"ORELSETEST")):i+1<this.elifs_&&(this.moveInputBefore("ELIFTEST"+i,"ELIFTEST"+(i+1)),this.moveInputBefore("ELIFBODY"+i,"ELIFBODY"+(i+1)))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("orelse",this.orelse_),container.setAttribute("elifs",this.elifs_),container},domToMutation:function domToMutation(xmlElement){this.orelse_="true"===xmlElement.getAttribute("orelse"),this.elifs_=parseInt(xmlElement.getAttribute("elifs"),10)||0,this.updateShape_()}},Blockly.Python.ast_If=function(block){for(var test="if "+(Blockly.Python.valueToCode(block,"TEST",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+":\n",body=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS,elifs=new Array(block.elifs_),i=0;i<block.elifs_;i++){var elif=block.elifs_[i],clause="elif "+(Blockly.Python.valueToCode(block,"ELIFTEST"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank);clause+=":\n"+(Blockly.Python.statementToCode(block,"ELIFBODY"+i)||Blockly.Python.PASS),elifs[i]=clause}var orelse="";return this.orelse_&&(orelse="else:\n"+(Blockly.Python.statementToCode(block,"ORELSEBODY")||Blockly.Python.PASS)),test+body+elifs.join("")+orelse},Blockly.Python.controls_if_better=function(block){var n=0,code="",branchCode,conditionCode;do{code+=(0==n?"if ":"elif ")+(conditionCode=Blockly.Python.valueToCode(block,"IF"+n,Blockly.Python.ORDER_NONE)||"___")+":\n"+(branchCode=Blockly.Python.statementToCode(block,"DO"+n)||Blockly.Python.PASS),++n}while(block.getInput("IF"+n));return block.getInput("ELSE")&&(code+="else:\n"+(branchCode=Blockly.Python.statementToCode(block,"ELSE")||Blockly.Python.PASS)),code},BlockMirrorTextToBlocks.prototype.ast_If=function(node,parent){for(var test=node.test,body=node.body,orelse=node.orelse,hasOrelse=!1,elifCount=0,values={TEST:this.convert(test,node)},statements={BODY:this.convertBody(body,node)};void 0!==orelse&&orelse.length>0;)1===orelse.length&&"If"===orelse[0]._astname?(this.heights.shift(),values["ELIFTEST"+elifCount]=this.convert(orelse[0].test,node),statements["ELIFBODY"+elifCount]=this.convertBody(orelse[0].body,node),elifCount++):(hasOrelse=!0,statements.ORELSEBODY=this.convertBody(orelse,node)),orelse=orelse[0].orelse;return BlockMirrorTextToBlocks.create_block("ast_If",node.lineno,{},values,{},{"@orelse":hasOrelse,"@elifs":elifCount},statements)},Blockly.Blocks.ast_While={init:function init(){this.orelse_=0,this.appendValueInput("TEST").appendField("while"),this.appendStatementInput("BODY").setCheck(null).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.CONTROL),this.updateShape_()},updateShape_:function updateShape_(){var latestInput="BODY";this.orelse_&&!this.getInput("ELSE")?(this.appendDummyInput("ORELSETEST").appendField("else:"),this.appendStatementInput("ORELSEBODY").setCheck(null)):!this.orelse_&&this.getInput("ELSE")&&(block.removeInput("ORELSETEST"),block.removeInput("ORELSEBODY"))},mutationToDom:function mutationToDom(){var container;document.createElement("mutation").setAttribute("orelse",this.orelse_)},domToMutation:function domToMutation(xmlElement){this.orelse_="true"===xmlElement.getAttribute("orelse"),this.updateShape_()}},Blockly.Python.ast_While=function(block){var test="while "+(Blockly.Python.valueToCode(block,"TEST",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+":\n",body=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS,orelse="";return this.orelse_&&(orelse="else:\n"+(Blockly.Python.statementToCode(block,"ORELSEBODY")||Blockly.Python.PASS)),test+body+orelse},BlockMirrorTextToBlocks.prototype.ast_While=function(node,parent){var test=node.test,body=node.body,orelse=node.orelse,values={TEST:this.convert(test,node)},statements={BODY:this.convertBody(body,node)},hasOrelse=!1;return null!==orelse&&orelse.length>0&&(statements.ORELSEBODY=this.convertBody(orelse,node),hasOrelse=!0),BlockMirrorTextToBlocks.create_block("ast_While",node.lineno,{},values,{},{"@orelse":hasOrelse},statements)},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Num",message0:"%1",args0:[{type:"field_number",name:"NUM",value:0}],output:"Number",colour:BlockMirrorTextToBlocks.COLOR.MATH}),Blockly.Python.ast_Num=function(block){var code=parseFloat(block.getFieldValue("NUM")),order;return code==1/0?(code='float("inf")',order=Blockly.Python.ORDER_FUNCTION_CALL):code==-1/0?(code='-float("inf")',order=Blockly.Python.ORDER_UNARY_SIGN):order=code<0?Blockly.Python.ORDER_UNARY_SIGN:Blockly.Python.ORDER_ATOMIC,[code,order]},BlockMirrorTextToBlocks.prototype.ast_Num=function(node,parent){var n=node.n;return BlockMirrorTextToBlocks.create_block("ast_Num",node.lineno,{NUM:Sk.ffi.remapToJs(n)})},BlockMirrorTextToBlocks.BINOPS=[["+","Add",Blockly.Python.ORDER_ADDITIVE,"Return the sum of the two numbers.","increase","by"],["-","Sub",Blockly.Python.ORDER_ADDITIVE,"Return the difference of the two numbers.","decrease","by"],["*","Mult",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the product of the two numbers.","multiply","by"],["/","Div",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the quotient of the two numbers.","divide","by"],["%","Mod",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the remainder of the first number divided by the second number.","modulo","by"],["**","Pow",Blockly.Python.ORDER_EXPONENTIATION,"Return the first number raised to the power of the second number.","raise","to"],["//","FloorDiv",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the truncated quotient of the two numbers.","floor divide","by"],["<<","LShift",Blockly.Python.ORDER_BITWISE_SHIFT,"Return the left number left shifted by the right number.","left shift","by"],[">>","RShift",Blockly.Python.ORDER_BITWISE_SHIFT,"Return the left number right shifted by the right number.","right shift","by"],["|","BitOr",Blockly.Python.ORDER_BITWISE_OR,"Returns the bitwise OR of the two values.","bitwise OR","using"],["^","BitXor",Blockly.Python.ORDER_BITWISE_XOR,"Returns the bitwise XOR of the two values.","bitwise XOR","using"],["&","BitAnd",Blockly.Python.ORDER_BITWISE_AND,"Returns the bitwise AND of the two values.","bitwise AND","using"],["@","MatMult",Blockly.Python.ORDER_MULTIPLICATIVE,"Return the matrix multiplication of the two numbers.","matrix multiply","by"]];var BINOPS_SIMPLE=["Add","Sub","Mult","Div","Mod","Pow"],BINOPS_BLOCKLY_DISPLAY_FULL=BlockMirrorTextToBlocks.BINOPS.map((function(binop){return[binop[0],binop[1]]})),BINOPS_BLOCKLY_DISPLAY=BINOPS_BLOCKLY_DISPLAY_FULL.filter((function(binop){return BINOPS_SIMPLE.indexOf(binop[1])>=0}));BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY_FULL=BlockMirrorTextToBlocks.BINOPS.map((function(binop){return[binop[4],binop[1]]})),BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY=BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY_FULL.filter((function(binop){return BINOPS_SIMPLE.indexOf(binop[1])>=0}));var BINOPS_BLOCKLY_GENERATE={};BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_PREPOSITION={},BlockMirrorTextToBlocks.BINOPS.forEach((function(binop){BINOPS_BLOCKLY_GENERATE[binop[1]]=[" "+binop[0],binop[2]],BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_PREPOSITION[binop[1]]=binop[5]})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_BinOpFull",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:BINOPS_BLOCKLY_DISPLAY_FULL},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.MATH}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_BinOp",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:BINOPS_BLOCKLY_DISPLAY},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.MATH}),Blockly.Python.ast_BinOp=function(block){var tuple=BINOPS_BLOCKLY_GENERATE[block.getFieldValue("OP")],operator=tuple[0]+" ",order=tuple[1],argument0,argument1,code;return[(Blockly.Python.valueToCode(block,"A",order)||Blockly.Python.blank)+operator+(Blockly.Python.valueToCode(block,"B",order)||Blockly.Python.blank),order]},BlockMirrorTextToBlocks.prototype.ast_BinOp=function(node,parent){var left=node.left,op=node.op.name,right=node.right,blockName=BINOPS_SIMPLE.indexOf(op)>=0?"ast_BinOp":"ast_BinOpFull";return BlockMirrorTextToBlocks.create_block(blockName,node.lineno,{OP:op},{A:this.convert(left,node),B:this.convert(right,node)},{inline:!0})},Blockly.Python.ast_BinOpFull=Blockly.Python.ast_BinOp,BlockMirrorTextToBlocks.prototype.ast_BinOpFull=BlockMirrorTextToBlocks.prototype.ast_BinOp,BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Name",message0:"%1",args0:[{type:"field_variable",name:"VAR",variable:"%{BKY_VARIABLES_DEFAULT_NAME}"}],output:null,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES,extensions:["contextMenu_variableSetterGetter_forBlockMirror"]}),Blockly.Constants.Variables.CUSTOM_CONTEXT_MENU_VARIABLE_GETTER_SETTER_MIXIN_FOR_BLOCK_MIRROR={customContextMenu:function customContextMenu(options){var name;if(this.isInFlyout){if("ast_Name"===this.type||"variables_get_reporter"===this.type){var renameOption={text:Blockly.Msg.RENAME_VARIABLE,enabled:!0,callback:Blockly.Constants.Variables.RENAME_OPTION_CALLBACK_FACTORY(this)};name=this.getField("VAR").getText();var deleteOption={text:Blockly.Msg.DELETE_VARIABLE.replace("%1",name),enabled:!0,callback:Blockly.Constants.Variables.DELETE_OPTION_CALLBACK_FACTORY(this)};options.unshift(renameOption),options.unshift(deleteOption)}}else{var opposite_type,contextMenuMsg;"ast_Name"===this.type?(opposite_type="ast_Assign",contextMenuMsg=Blockly.Msg.VARIABLES_GET_CREATE_SET):(opposite_type="ast_Name",contextMenuMsg=Blockly.Msg.VARIABLES_SET_CREATE_GET);var option={enabled:this.workspace.remainingCapacity()>0};name=this.getField("VAR").getText(),option.text=contextMenuMsg.replace("%1",name);var xmlField=document.createElement("field");xmlField.setAttribute("name","VAR"),xmlField.appendChild(document.createTextNode(name));var xmlBlock=document.createElement("block");xmlBlock.setAttribute("type",opposite_type),xmlBlock.appendChild(xmlField),option.callback=Blockly.ContextMenu.callbackFactory(this,xmlBlock),options.push(option)}}},Blockly.Extensions.registerMixin("contextMenu_variableSetterGetter_forBlockMirror",Blockly.Constants.Variables.CUSTOM_CONTEXT_MENU_VARIABLE_GETTER_SETTER_MIXIN_FOR_BLOCK_MIRROR),Blockly.Python.ast_Name=function(block){var code;return[Blockly.Python.variableDB_.getName(block.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE),Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Name=function(node,parent){var id=node.id,ctx=node.ctx;return id.v==Blockly.Python.blank?null:BlockMirrorTextToBlocks.create_block("ast_Name",node.lineno,{VAR:id.v})},Blockly.Blocks.ast_Assign={init:function init(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.targetCount_=1,this.simpleTarget_=!0,this.updateShape_(),Blockly.Extensions.apply("contextMenu_variableSetterGetter",this,!1)},updateShape_:function updateShape_(){this.getInput("VALUE")||(this.appendDummyInput().appendField("set"),this.appendValueInput("VALUE").appendField("="));var i=0;if(1===this.targetCount_&&this.simpleTarget_)this.setInputsInline(!0),this.getInput("VAR_ANCHOR")||this.appendDummyInput("VAR_ANCHOR").appendField(new Blockly.FieldVariable("variable"),"VAR"),this.moveInputBefore("VAR_ANCHOR","VALUE");else{for(this.setInputsInline(!0);i<this.targetCount_;i++){if(!this.getInput("TARGET"+i)){var input=this.appendValueInput("TARGET"+i);0!==i&&input.appendField("and").setAlign(Blockly.ALIGN_RIGHT)}this.moveInputBefore("TARGET"+i,"VALUE")}this.getInput("VAR_ANCHOR")&&this.removeInput("VAR_ANCHOR")}for(;this.getInput("TARGET"+i);)this.removeInput("TARGET"+i),i++},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("targets",this.targetCount_),container.setAttribute("simple",this.simpleTarget_),container},domToMutation:function domToMutation(xmlElement){this.targetCount_=parseInt(xmlElement.getAttribute("targets"),10),this.simpleTarget_="true"===xmlElement.getAttribute("simple"),this.updateShape_()}},Blockly.Python.ast_Assign=function(block){var value=Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,targets=new Array(block.targetCount_);if(1===block.targetCount_&&block.simpleTarget_)targets[0]=Blockly.Python.variableDB_.getName(block.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE);else for(var i=0;i<block.targetCount_;i++)targets[i]=Blockly.Python.valueToCode(block,"TARGET"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;return targets.join(" = ")+" = "+value+"\n"},BlockMirrorTextToBlocks.prototype.ast_Assign=function(node,parent){var targets=node.targets,value=node.value,values,fields={},simpleTarget=1===targets.length&&"Name"===targets[0]._astname;return simpleTarget?(values={},fields.VAR=Sk.ffi.remapToJs(targets[0].id)):values=this.convertElements("TARGET",targets,node),values.VALUE=this.convert(value,node),BlockMirrorTextToBlocks.create_block("ast_Assign",node.lineno,fields,values,{inline:"true"},{"@targets":targets.length,"@simple":simpleTarget})},Blockly.Blocks.ast_AnnAssignFull={init:function init(){this.appendValueInput("TARGET").setCheck(null).appendField("set"),this.appendValueInput("ANNOTATION").setCheck(null).appendField(":"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.initialized_=!0,this.updateShape_()},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("initialized",this.initialized_),container},domToMutation:function domToMutation(xmlElement){this.initialized_="true"===xmlElement.getAttribute("initialized"),this.updateShape_()},updateShape_:function updateShape_(block){this.initialized_&&!this.getInput("VALUE")&&this.appendValueInput("VALUE").appendField("=").setAlign(Blockly.ALIGN_RIGHT),!this.initialized_&&this.getInput("VALUE")&&this.removeInput("VALUE")}},BlockMirrorTextToBlocks.ANNOTATION_OPTIONS=[["int","int"],["float","float"],["str","str"],["bool","bool"],["None","None"]],BlockMirrorTextToBlocks.ANNOTATION_GENERATE={},BlockMirrorTextToBlocks.ANNOTATION_OPTIONS.forEach((function(ann){BlockMirrorTextToBlocks.ANNOTATION_GENERATE[ann[1]]=ann[0]})),Blockly.Blocks.ast_AnnAssign={init:function init(){this.appendDummyInput().appendField("set").appendField(new Blockly.FieldVariable("item"),"TARGET").appendField(":").appendField(new Blockly.FieldDropdown(BlockMirrorTextToBlocks.ANNOTATION_OPTIONS),"ANNOTATION"),this.appendValueInput("VALUE").setCheck(null).appendField("="),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.strAnnotations_=!1,this.initialized_=!0},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("str",this.strAnnotations_),container.setAttribute("initialized",this.initialized_),container},domToMutation:function domToMutation(xmlElement){this.strAnnotations_="true"===xmlElement.getAttribute("str"),this.initialized_="true"===xmlElement.getAttribute("initialized"),this.updateShape_()},updateShape_:function updateShape_(block){this.initialized_&&!this.getInput("VALUE")&&this.appendValueInput("VALUE").appendField("=").setAlign(Blockly.ALIGN_RIGHT),!this.initialized_&&this.getInput("VALUE")&&this.removeInput("VALUE")}},Blockly.Python.ast_AnnAssignFull=function(block){var target=Blockly.Python.valueToCode(block,"TARGET",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,annotation=Blockly.Python.valueToCode(block,"ANNOTATION",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,value="";return this.initialized_&&(value=" = "+Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank),target+": "+annotation+value+"\n"},Blockly.Python.ast_AnnAssign=function(block){var target=Blockly.Python.variableDB_.getName(block.getFieldValue("TARGET"),Blockly.Variables.NAME_TYPE),annotation=block.getFieldValue("ANNOTATION");block.strAnnotations_&&(annotation=Blockly.Python.quote_(annotation));var value="";return this.initialized_&&(value=" = "+Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank),target+": "+annotation+value+"\n"},BlockMirrorTextToBlocks.prototype.getBuiltinAnnotation=function(annotation){var result=!1;return"Name"===annotation._astname?result=Sk.ffi.remapToJs(annotation.id):"Str"===annotation._astname&&(result=Sk.ffi.remapToJs(annotation.s)),!1!==result&&this.strictAnnotations?-1!==this.strictAnnotations.indexOf(result)&&result:result},BlockMirrorTextToBlocks.prototype.ast_AnnAssign=function(node,parent){var target=node.target,annotation=node.annotation,value=node.value,values={},mutations={"@initialized":!1};null!==value&&(values.VALUE=this.convert(value,node),mutations["@initialized"]=!0);var simple=node.simple,builtinAnnotation=this.getBuiltinAnnotation(annotation);return"Name"===target._astname&&target.id.v!==Blockly.Python.blank&&!1!==builtinAnnotation?(mutations["@str"]="Str"===annotation._astname,BlockMirrorTextToBlocks.create_block("ast_AnnAssign",node.lineno,{TARGET:target.id.v,ANNOTATION:builtinAnnotation},values,{inline:"true"},mutations)):(values.TARGET=this.convert(target,node),values.ANNOTATION=this.convert(annotation,node),BlockMirrorTextToBlocks.create_block("ast_AnnAssignFull",node.lineno,{},values,{inline:"true"},mutations))},Blockly.Blocks.ast_AugAssign={init:function init(){var block=this;this.simpleTarget_=!0,this.allOptions_=!1,this.initialPreposition_="by",this.appendDummyInput("OP").appendField(new Blockly.FieldDropdown((function(){return block.allOptions_?BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY_FULL:BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_DISPLAY}),(function(value){var block;this.sourceBlock_.updatePreposition_(value)})),"OP_NAME").appendField(" "),this.appendDummyInput("PREPOSITION_ANCHOR").setAlign(Blockly.ALIGN_RIGHT).appendField("by","PREPOSITION"),this.appendValueInput("VALUE"),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.updateShape_(),this.updatePreposition_(this.initialPreposition_)},updatePreposition_:function updatePreposition_(value){var preposition=BlockMirrorTextToBlocks.BINOPS_AUGASSIGN_PREPOSITION[value];this.setFieldValue(preposition,"PREPOSITION")},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("simple",this.simpleTarget_),container.setAttribute("options",this.allOptions_),container.setAttribute("preposition",this.initialPreposition_),container},domToMutation:function domToMutation(xmlElement){this.simpleTarget_="true"===xmlElement.getAttribute("simple"),this.allOptions_="true"===xmlElement.getAttribute("options"),this.initialPreposition_=xmlElement.getAttribute("preposition"),this.updateShape_(),this.updatePreposition_(this.initialPreposition_)},updateShape_:function updateShape_(block){this.getField("OP_NAME").getOptions(!1),this.simpleTarget_?(this.getInput("VAR_ANCHOR")||(this.appendDummyInput("VAR_ANCHOR").appendField(new Blockly.FieldVariable("variable"),"VAR"),this.moveInputBefore("VAR_ANCHOR","PREPOSITION_ANCHOR")),this.getInput("TARGET")&&this.removeInput("TARGET")):(this.getInput("VAR_ANCHOR")&&this.removeInput("VAR_ANCHOR"),this.getInput("TARGET")||(this.appendValueInput("TARGET"),this.moveInputBefore("TARGET","PREPOSITION_ANCHOR")))}},Blockly.Python.ast_AugAssign=function(block){var target,operator,value;return(target=block.simpleTarget_?Blockly.Python.variableDB_.getName(block.getFieldValue("VAR"),Blockly.Variables.NAME_TYPE):Blockly.Python.valueToCode(block,"TARGET",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+BINOPS_BLOCKLY_GENERATE[block.getFieldValue("OP_NAME")][0]+"= "+(Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_AugAssign=function(node,parent){var target=node.target,op=node.op.name,value=node.value,values={VALUE:this.convert(value,node)},fields={OP_NAME:op},simpleTarget="Name"===target._astname;simpleTarget?fields.VAR=Sk.ffi.remapToJs(target.id):values.TARGET=this.convert(value,node);var preposition=op,allOptions=-1===BINOPS_SIMPLE.indexOf(op);return BlockMirrorTextToBlocks.create_block("ast_AugAssign",node.lineno,fields,values,{inline:"true"},{"@options":allOptions,"@simple":simpleTarget,"@preposition":preposition})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Str",message0:"%1",args0:[{type:"field_input",name:"TEXT",value:""}],output:"String",colour:BlockMirrorTextToBlocks.COLOR.TEXT,extensions:["text_quotes"]}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_StrChar",message0:"%1",args0:[{type:"field_dropdown",name:"TEXT",options:[["\n","\n"],["\t","\t"]]}],output:"String",colour:BlockMirrorTextToBlocks.COLOR.TEXT,extensions:["text_quotes"]}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_StrMultiline",message0:"%1",args0:[{type:"field_multilinetext",name:"TEXT",value:""}],output:"String",colour:BlockMirrorTextToBlocks.COLOR.TEXT,extensions:["text_quotes"]}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_StrDocstring",message0:"Docstring: %1 %2",args0:[{type:"input_dummy"},{type:"field_multilinetext",name:"TEXT",value:""}],previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.TEXT}),Blockly.Blocks.ast_Image={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.TEXT),this.src_="loading.png",this.updateShape_(),this.setOutput(!0)},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("src",this.src_),container},domToMutation:function domToMutation(xmlElement){this.src_=xmlElement.getAttribute("src"),this.updateShape_()},updateShape_:function updateShape_(){var image=this.getInput("IMAGE"),imageField;image||(image=this.appendDummyInput("IMAGE")).appendField(new Blockly.FieldImage(this.src_,40,40,{alt:this.src_,flipRtl:"FALSE"})),image.fieldRow[0].setValue(this.src_)}},Blockly.Python.ast_Str=function(block){var code=Blockly.Python.quote_(block.getFieldValue("TEXT"));return[code=code.replace("\n","n"),Blockly.Python.ORDER_ATOMIC]},Blockly.Python.ast_StrChar=function(block){var value;switch(block.getFieldValue("TEXT")){case"\n":return["'\n'",Blockly.Python.ORDER_ATOMIC];case"\t":return["'\t'",Blockly.Python.ORDER_ATOMIC]}},Blockly.Python.ast_Image=function(block){var code;return[Blockly.Python.quote_(block.src_),Blockly.Python.ORDER_FUNCTION_CALL]},Blockly.Python.ast_StrMultiline=function(block){var code;return[Blockly.Python.multiline_quote_(block.getFieldValue("TEXT")),Blockly.Python.ORDER_ATOMIC]},Blockly.Python.ast_StrDocstring=function(block){var code=block.getFieldValue("TEXT");return"\n"!==code.charAt(0)&&(code="\n"+code),"\n"!==code.charAt(code.length-1)&&(code+="\n"),Blockly.Python.multiline_quote_(code)+"\n"},BlockMirrorTextToBlocks.prototype.isSingleChar=function(text){return"\n"===text||"\t"===text},BlockMirrorTextToBlocks.prototype.isDocString=function(node,parent){return"Expr"===parent._astname&&parent._parent&&-1!==["FunctionDef","ClassDef"].indexOf(parent._parent._astname)&&parent._parent.body[0]===parent},BlockMirrorTextToBlocks.prototype.isSimpleString=function(text){return text.split("\n").length<=2&&text.length<=40},BlockMirrorTextToBlocks.prototype.dedent=function(text,levels,isDocString){if(!isDocString&&"\n"===text.charAt(0))return text;for(var split=text.split("\n"),indentation="    ".repeat(levels),recombined=[],i=0;i<split.length;i++)if(""===split[i])0!==i&&recombined.push("");else if(split[i].startsWith(indentation)){var unindentedLine=split[i].substr(indentation.length);""===unindentedLine&&i===split.length-1||recombined.push(unindentedLine)}else{if(0!==i)return text;recombined.push(split[i])}return recombined.join("\n")},BlockMirrorTextToBlocks.prototype.ast_Str=function(node,parent){var s=node.s,text=Sk.ffi.remapToJs(s),regex;if(BlockMirrorTextEditor.REGEX_PATTERNS[this.blockMirror.configuration.imageDetection].test(JSON.stringify(text)))return BlockMirrorTextToBlocks.create_block("ast_Image",node.lineno,{},{},{},{"@src":text});if(this.isSingleChar(text))return BlockMirrorTextToBlocks.create_block("ast_StrChar",node.lineno,{TEXT:text});if(this.isDocString(node,parent)){var dedented=this.dedent(text,this.levelIndex-1,!0);return[BlockMirrorTextToBlocks.create_block("ast_StrDocstring",node.lineno,{TEXT:dedented})]}if(-1===text.indexOf("\n"))return BlockMirrorTextToBlocks.create_block("ast_Str",node.lineno,{TEXT:text});var _dedented=this.dedent(text,this.levelIndex-1,!1);return BlockMirrorTextToBlocks.create_block("ast_StrMultiline",node.lineno,{TEXT:_dedented})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Expr",message0:"do nothing with %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.PYTHON}),Blockly.Python.ast_Expr=function(block){var value;return(Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_Expr=function(node,parent){var value=node.value,converted=this.convert(value,node);return converted.constructor===Array?converted[0]:this.isTopLevel(parent)?[this.convert(value,node)]:BlockMirrorTextToBlocks.create_block("ast_Expr",node.lineno,{},{VALUE:this.convert(value,node)})},BlockMirrorTextToBlocks.UNARYOPS=[["+","UAdd","Do nothing to the number"],["-","USub","Make the number negative"],["not","Not","Return the logical opposite of the value."],["~","Invert","Take the bit inversion of the number"]],BlockMirrorTextToBlocks.UNARYOPS.forEach((function(unaryop){var fullName="ast_UnaryOp"+unaryop[1];BlockMirrorTextToBlocks.BLOCKS.push({type:fullName,message0:unaryop[0]+" %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:"Not"===unaryop[1]?BlockMirrorTextToBlocks.COLOR.LOGIC:BlockMirrorTextToBlocks.COLOR.MATH}),Blockly.Python[fullName]=function(block){var order="Not"===unaryop[1]?Blockly.Python.ORDER_LOGICAL_NOT:Blockly.Python.ORDER_UNARY_SIGN,argument1=Blockly.Python.valueToCode(block,"VALUE",order)||Blockly.Python.blank,code;return[unaryop[0]+("Not"===unaryop[1]?" ":"")+argument1,order]}})),BlockMirrorTextToBlocks.prototype.ast_UnaryOp=function(node,parent){var op=node.op.name,operand=node.operand;return BlockMirrorTextToBlocks.create_block("ast_UnaryOp"+op,node.lineno,{},{VALUE:this.convert(operand,node)},{inline:!1})},BlockMirrorTextToBlocks.BOOLOPS=[["and","And",Blockly.Python.ORDER_LOGICAL_AND,"Return whether the left and right both evaluate to True."],["or","Or",Blockly.Python.ORDER_LOGICAL_OR,"Return whether either the left or right evaluate to True."]];var BOOLOPS_BLOCKLY_DISPLAY=BlockMirrorTextToBlocks.BOOLOPS.map((function(boolop){return[boolop[0],boolop[1]]})),BOOLOPS_BLOCKLY_GENERATE={};BlockMirrorTextToBlocks.BOOLOPS.forEach((function(boolop){BOOLOPS_BLOCKLY_GENERATE[boolop[1]]=[" "+boolop[0]+" ",boolop[2]]})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_BoolOp",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:BOOLOPS_BLOCKLY_DISPLAY},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_BoolOp=function(block){var operator="And"===block.getFieldValue("OP")?"and":"or",order="and"===operator?Blockly.Python.ORDER_LOGICAL_AND:Blockly.Python.ORDER_LOGICAL_OR,argument0,argument1,code;return[(Blockly.Python.valueToCode(block,"A",order)||Blockly.Python.blank)+" "+operator+" "+(Blockly.Python.valueToCode(block,"B",order)||Blockly.Python.blank),order]},BlockMirrorTextToBlocks.prototype.ast_BoolOp=function(node,parent){for(var op=node.op,values=node.values,result_block=this.convert(values[0],node),i=1;i<values.length;i+=1)result_block=BlockMirrorTextToBlocks.create_block("ast_BoolOp",node.lineno,{OP:op.name},{A:result_block,B:this.convert(values[i],node)},{inline:"true"});return result_block},BlockMirrorTextToBlocks.COMPARES=[["==","Eq","Return whether the two values are equal."],["!=","NotEq","Return whether the two values are not equal."],["<","Lt","Return whether the left value is less than the right value."],["<=","LtE","Return whether the left value is less than or equal to the right value."],[">","Gt","Return whether the left value is greater than the right value."],[">=","GtE","Return whether the left value is greater than or equal to the right value."],["is","Is","Return whether the left value is identical to the right value."],["is not","IsNot","Return whether the left value is not identical to the right value."],["in","In","Return whether the left value is in the right value."],["not in","NotIn","Return whether the left value is not in the right value."]];var COMPARES_BLOCKLY_DISPLAY=BlockMirrorTextToBlocks.COMPARES.map((function(boolop){return[boolop[0],boolop[1]]})),COMPARES_BLOCKLY_GENERATE={};BlockMirrorTextToBlocks.COMPARES.forEach((function(boolop){COMPARES_BLOCKLY_GENERATE[boolop[1]]=boolop[0]})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Compare",message0:"%1 %2 %3",args0:[{type:"input_value",name:"A"},{type:"field_dropdown",name:"OP",options:COMPARES_BLOCKLY_DISPLAY},{type:"input_value",name:"B"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_Compare=function(block){var tuple,operator=" "+COMPARES_BLOCKLY_GENERATE[block.getFieldValue("OP")]+" ",order=Blockly.Python.ORDER_RELATIONAL,argument0,argument1,code;return[(Blockly.Python.valueToCode(block,"A",order)||Blockly.Python.blank)+operator+(Blockly.Python.valueToCode(block,"B",order)||Blockly.Python.blank),order]},BlockMirrorTextToBlocks.prototype.ast_Compare=function(node,parent){for(var ops=node.ops,left=node.left,values=node.comparators,result_block=this.convert(left,node),i=0;i<values.length;i+=1)result_block=BlockMirrorTextToBlocks.create_block("ast_Compare",node.lineno,{OP:ops[i].name},{A:result_block,B:this.convert(values[i],node)},{inline:"true"});return result_block},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_AssertFull",message0:"assert %1 %2",args0:[{type:"input_value",name:"TEST"},{type:"input_value",name:"MSG"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Assert",message0:"assert %1",args0:[{type:"input_value",name:"TEST"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_Assert=function(block){var test;return"assert "+(Blockly.Python.valueToCode(block,"TEST",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},Blockly.Python.ast_AssertFull=function(block){var test,msg;return"assert "+(Blockly.Python.valueToCode(block,"TEST",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+", "+(Blockly.Python.valueToCode(block,"MSG",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_Assert=function(node,parent){var test=node.test,msg=node.msg;return null==msg?BlockMirrorTextToBlocks.create_block("ast_Assert",node.lineno,{},{TEST:this.convert(test,node)}):BlockMirrorTextToBlocks.create_block("ast_AssertFull",node.lineno,{},{TEST:this.convert(test,node),MSG:this.convert(msg,node)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_NameConstantNone",message0:"None",args0:[],output:"None",colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_NameConstantBoolean",message0:"%1",args0:[{type:"field_dropdown",name:"BOOL",options:[["True","TRUE"],["False","FALSE"]]}],output:"Boolean",colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_NameConstantBoolean=function(block){var code;return["TRUE"==block.getFieldValue("BOOL")?"True":"False",Blockly.Python.ORDER_ATOMIC]},Blockly.Python.ast_NameConstantNone=function(block){var code;return["None",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_NameConstant=function(node,parent){var value=node.value;return value===Sk.builtin.none.none$?BlockMirrorTextToBlocks.create_block("ast_NameConstantNone",node.lineno,{}):value===Sk.builtin.bool.true$?BlockMirrorTextToBlocks.create_block("ast_NameConstantBoolean",node.lineno,{BOOL:"TRUE"}):value===Sk.builtin.bool.false$?BlockMirrorTextToBlocks.create_block("ast_NameConstantBoolean",node.lineno,{BOOL:"FALSE"}):void 0},Blockly.Blocks.ast_List={init:function init(){this.setHelpUrl(Blockly.Msg.LISTS_CREATE_WITH_HELPURL),this.setColour(BlockMirrorTextToBlocks.COLOR.LIST),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"List"),this.setMutator(new Blockly.Mutator(["ast_List_create_with_item"]))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("items",this.itemCount_),container},domToMutation:function domToMutation(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute("items"),10),this.updateShape_()},decompose:function decompose(workspace){var containerBlock=workspace.newBlock("ast_List_create_with_container");containerBlock.initSvg();for(var connection=containerBlock.getInput("STACK").connection,i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock("ast_List_create_with_item");itemBlock.initSvg(),connection.connect(itemBlock.previousConnection),connection=itemBlock.nextConnection}return containerBlock},compose:function compose(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),connections=[];itemBlock;)connections.push(itemBlock.valueConnection_),itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();for(var i=0;i<this.itemCount_;i++){var connection=this.getInput("ADD"+i).connection.targetConnection;connection&&-1==connections.indexOf(connection)&&connection.disconnect()}this.itemCount_=connections.length,this.updateShape_();for(var i=0;i<this.itemCount_;i++)Blockly.Mutator.reconnect(connections[i],this,"ADD"+i)},saveConnections:function saveConnections(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),i=0;itemBlock;){var input=this.getInput("ADD"+i);itemBlock.valueConnection_=input&&input.connection.targetConnection,i++,itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock()}},updateShape_:function updateShape_(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("create empty list []");for(var i=0;i<this.itemCount_;i++)if(!this.getInput("ADD"+i)){var input=this.appendValueInput("ADD"+i);0==i?input.appendField("create list with ["):input.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+i);)this.removeInput("ADD"+i),i++;this.getInput("TAIL")&&this.removeInput("TAIL"),this.itemCount_&&this.appendDummyInput("TAIL").appendField("]").setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Blocks.ast_List_create_with_container={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.LIST),this.appendDummyInput().appendField("Add new list elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_List_create_with_item={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.LIST),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_List=function(block){for(var elements=new Array(block.itemCount_),i=0;i<block.itemCount_;i++)elements[i]=Blockly.Python.valueToCode(block,"ADD"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var code;return["["+elements.join(", ")+"]",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_List=function(node,parent){var elts=node.elts,ctx=node.ctx;return BlockMirrorTextToBlocks.create_block("ast_List",node.lineno,{},this.convertElements("ADD",elts,node),{inline:elts.length>3?"false":"true"},{"@items":elts.length})},Blockly.Blocks.ast_Tuple={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.TUPLE),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"Tuple"),this.setMutator(new Blockly.Mutator(["ast_Tuple_create_with_item"]))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("items",this.itemCount_),container},domToMutation:function domToMutation(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute("items"),10),this.updateShape_()},decompose:function decompose(workspace){var containerBlock=workspace.newBlock("ast_Tuple_create_with_container");containerBlock.initSvg();for(var connection=containerBlock.getInput("STACK").connection,i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock("ast_Tuple_create_with_item");itemBlock.initSvg(),connection.connect(itemBlock.previousConnection),connection=itemBlock.nextConnection}return containerBlock},compose:function compose(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),connections=[];itemBlock;)connections.push(itemBlock.valueConnection_),itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();for(var i=0;i<this.itemCount_;i++){var connection=this.getInput("ADD"+i).connection.targetConnection;connection&&-1==connections.indexOf(connection)&&connection.disconnect()}this.itemCount_=connections.length,this.updateShape_();for(var i=0;i<this.itemCount_;i++)Blockly.Mutator.reconnect(connections[i],this,"ADD"+i)},saveConnections:function saveConnections(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),i=0;itemBlock;){var input=this.getInput("ADD"+i);itemBlock.valueConnection_=input&&input.connection.targetConnection,i++,itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock()}},updateShape_:function updateShape_(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("()");for(var i=0;i<this.itemCount_;i++)if(!this.getInput("ADD"+i)){var input=this.appendValueInput("ADD"+i);0===i?input.appendField("(").setAlign(Blockly.ALIGN_RIGHT):input.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+i);)this.removeInput("ADD"+i),i++;if(this.getInput("TAIL")&&this.removeInput("TAIL"),this.itemCount_){var tail=this.appendDummyInput("TAIL");1===this.itemCount_?tail.appendField(",)"):tail.appendField(")"),tail.setAlign(Blockly.ALIGN_RIGHT)}}},Blockly.Blocks.ast_Tuple_create_with_container={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.TUPLE),this.appendDummyInput().appendField("Add new tuple elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Tuple_create_with_item={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.TUPLE),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_Tuple=function(block){for(var elements=new Array(block.itemCount_),i=0;i<block.itemCount_;i++)elements[i]=Blockly.Python.valueToCode(block,"ADD"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var requiredComma="",code;return 1==block.itemCount_&&(requiredComma=", "),["("+elements.join(", ")+requiredComma+")",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Tuple=function(node,parent){var elts=node.elts,ctx=node.ctx;return BlockMirrorTextToBlocks.create_block("ast_Tuple",node.lineno,{},this.convertElements("ADD",elts,node),{inline:elts.length>4?"false":"true"},{"@items":elts.length})},Blockly.Blocks.ast_Set={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.SET),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"Set"),this.setMutator(new Blockly.Mutator(["ast_Set_create_with_item"]))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("items",this.itemCount_),container},domToMutation:function domToMutation(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute("items"),10),this.updateShape_()},decompose:function decompose(workspace){var containerBlock=workspace.newBlock("ast_Set_create_with_container");containerBlock.initSvg();for(var connection=containerBlock.getInput("STACK").connection,i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock("ast_Set_create_with_item");itemBlock.initSvg(),connection.connect(itemBlock.previousConnection),connection=itemBlock.nextConnection}return containerBlock},compose:function compose(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),connections=[];itemBlock;)connections.push(itemBlock.valueConnection_),itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();for(var i=0;i<this.itemCount_;i++){var connection=this.getInput("ADD"+i).connection.targetConnection;connection&&-1==connections.indexOf(connection)&&connection.disconnect()}this.itemCount_=connections.length,this.updateShape_();for(var i=0;i<this.itemCount_;i++)Blockly.Mutator.reconnect(connections[i],this,"ADD"+i)},saveConnections:function saveConnections(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),i=0;itemBlock;){var input=this.getInput("ADD"+i);itemBlock.valueConnection_=input&&input.connection.targetConnection,i++,itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock()}},updateShape_:function updateShape_(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("create empty set");for(var i=0;i<this.itemCount_;i++)if(!this.getInput("ADD"+i)){var input=this.appendValueInput("ADD"+i);0===i?input.appendField("create set with {").setAlign(Blockly.ALIGN_RIGHT):input.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+i);)this.removeInput("ADD"+i),i++;this.getInput("TAIL")&&this.removeInput("TAIL"),this.itemCount_&&this.appendDummyInput("TAIL").appendField("}").setAlign(Blockly.ALIGN_RIGHT)}},Blockly.Blocks.ast_Set_create_with_container={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.SET),this.appendDummyInput().appendField("Add new set elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Set_create_with_item={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.SET),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_Set=function(block){if(0===block.itemCount_)return["set()",Blockly.Python.ORDER_FUNCTION_CALL];for(var elements=new Array(block.itemCount_),i=0;i<block.itemCount_;i++)elements[i]=Blockly.Python.valueToCode(block,"ADD"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var code;return["{"+elements.join(", ")+"}",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Set=function(node,parent){var elts=node.elts;return BlockMirrorTextToBlocks.create_block("ast_Set",node.lineno,{},this.convertElements("ADD",elts,node),{inline:elts.length>3?"false":"true"},{"@items":elts.length})},Blockly.Blocks.ast_DictItem={init:function init(){this.appendValueInput("KEY").setCheck(null),this.appendValueInput("VALUE").setCheck(null).appendField(":"),this.setInputsInline(!0),this.setOutput(!0,"DictPair"),this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY)}},Blockly.Blocks.ast_Dict={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY),this.itemCount_=3,this.updateShape_(),this.setOutput(!0,"Dict"),this.setMutator(new Blockly.Mutator(["ast_Dict_create_with_item"]))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("items",this.itemCount_),container},domToMutation:function domToMutation(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute("items"),10),this.updateShape_()},decompose:function decompose(workspace){var containerBlock=workspace.newBlock("ast_Dict_create_with_container");containerBlock.initSvg();for(var connection=containerBlock.getInput("STACK").connection,i=0;i<this.itemCount_;i++){var itemBlock=workspace.newBlock("ast_Dict_create_with_item");itemBlock.initSvg(),connection.connect(itemBlock.previousConnection),connection=itemBlock.nextConnection}return containerBlock},compose:function compose(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),connections=[];itemBlock;)connections.push(itemBlock.valueConnection_),itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();for(var i=0;i<this.itemCount_;i++){var connection=this.getInput("ADD"+i).connection.targetConnection;if(connection&&-1==connections.indexOf(connection)){var key=connection.getSourceBlock().getInput("KEY");key.connection.targetConnection&&key.connection.targetConnection.getSourceBlock().unplug(!0);var value=connection.getSourceBlock().getInput("VALUE");value.connection.targetConnection&&value.connection.targetConnection.getSourceBlock().unplug(!0),connection.disconnect(),connection.getSourceBlock().dispose()}}this.itemCount_=connections.length,this.updateShape_();for(var i=0;i<this.itemCount_;i++)if(Blockly.Mutator.reconnect(connections[i],this,"ADD"+i),!connections[i]){var _itemBlock=this.workspace.newBlock("ast_DictItem");_itemBlock.setDeletable(!1),_itemBlock.setMovable(!1),_itemBlock.initSvg(),this.getInput("ADD"+i).connection.connect(_itemBlock.outputConnection),_itemBlock.render()}},saveConnections:function saveConnections(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),i=0;itemBlock;){var input=this.getInput("ADD"+i);itemBlock.valueConnection_=input&&input.connection.targetConnection,i++,itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock()}},updateShape_:function updateShape_(){this.itemCount_&&this.getInput("EMPTY")?this.removeInput("EMPTY"):this.itemCount_||this.getInput("EMPTY")||this.appendDummyInput("EMPTY").appendField("empty dictionary");for(var i=0;i<this.itemCount_;i++)if(!this.getInput("ADD"+i)){var input=this.appendValueInput("ADD"+i).setCheck("DictPair");0===i&&input.appendField("create dict with").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("ADD"+i);)this.removeInput("ADD"+i),i++}},Blockly.Blocks.ast_Dict_create_with_container={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY),this.appendDummyInput().appendField("Add new dict elements below"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Dict_create_with_item={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.DICTIONARY),this.appendDummyInput().appendField("Element"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Python.ast_Dict=function(block){for(var elements=new Array(block.itemCount_),i=0;i<block.itemCount_;i++){var child=block.getInputTargetBlock("ADD"+i);if(null!==child&&"ast_DictItem"==child.type){var key=Blockly.Python.valueToCode(child,"KEY",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,value=Blockly.Python.valueToCode(child,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;elements[i]=key+": "+value}else elements[i]=Blockly.Python.blank+": "+Blockly.Python.blank}var code;return["{"+elements.join(", ")+"}",Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype.ast_Dict=function(node,parent){var keys=node.keys,values=node.values;if(null===keys)return BlockMirrorTextToBlocks.create_block("ast_Dict",node.lineno,{},{},{inline:"false"},{"@items":0});for(var elements={},i=0;i<keys.length;i++){var key=keys[i],value=values[i];elements["ADD"+i]=BlockMirrorTextToBlocks.create_block("ast_DictItem",node.lineno,{},{KEY:this.convert(key,node),VALUE:this.convert(value,node)},this.LOCKED_BLOCK)}return BlockMirrorTextToBlocks.create_block("ast_Dict",node.lineno,{},elements,{inline:"false"},{"@items":keys.length})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Starred",message0:"*%1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.VARIABLES}),Blockly.Python.ast_Starred=function(block){var order=Blockly.Python.ORDER_NONE,argument1,code;return["*"+(Blockly.Python.valueToCode(block,"VALUE",order)||Blockly.Python.blank),order]},BlockMirrorTextToBlocks.prototype.ast_Starred=function(node,parent){var value=node.value,ctx=node.ctx;return BlockMirrorTextToBlocks.create_block("ast_Starred",node.lineno,{},{VALUE:this.convert(value,node)},{inline:!0})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_IfExp",message0:"%1 if %2 else %3",args0:[{type:"input_value",name:"BODY"},{type:"input_value",name:"TEST"},{type:"input_value",name:"ORELSE"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.LOGIC}),Blockly.Python.ast_IfExp=function(block){var test=Blockly.Python.valueToCode(block,"TEST",Blockly.Python.ORDER_CONDITIONAL)||Blockly.Python.blank,body,orelse;return[(Blockly.Python.valueToCode(block,"BODY",Blockly.Python.ORDER_CONDITIONAL)||Blockly.Python.blank)+" if "+test+" else "+(Blockly.Python.valueToCode(block,"ORELSE",Blockly.Python.ORDER_CONDITIONAL)||Blockly.Python.blank)+"\n",Blockly.Python.ORDER_CONDITIONAL]},BlockMirrorTextToBlocks.prototype.ast_IfExp=function(node,parent){var test=node.test,body=node.body,orelse=node.orelse;return BlockMirrorTextToBlocks.create_block("ast_IfExp",node.lineno,{},{TEST:this.convert(test,node),BODY:this.convert(body,node),ORELSE:this.convert(orelse,node)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_AttributeFull",lastDummyAlign0:"RIGHT",message0:"%1 . %2",args0:[{type:"input_value",name:"VALUE"},{type:"field_input",name:"ATTR",text:"default"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.OO}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Attribute",message0:"%1 . %2",args0:[{type:"field_variable",name:"VALUE",variable:"variable"},{type:"field_input",name:"ATTR",text:"attribute"}],inputsInline:!0,output:null,colour:BlockMirrorTextToBlocks.COLOR.OO}),Blockly.Python.ast_Attribute=function(block){var value,attr,code;return[Blockly.Python.variableDB_.getName(block.getFieldValue("VALUE"),Blockly.Variables.NAME_TYPE)+"."+block.getFieldValue("ATTR"),Blockly.Python.ORDER_MEMBER]},Blockly.Python.ast_AttributeFull=function(block){var value,attr,code;return[(Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+"."+block.getFieldValue("ATTR"),Blockly.Python.ORDER_MEMBER]},BlockMirrorTextToBlocks.prototype.ast_Attribute=function(node,parent){var value=node.value,attr=node.attr;return"Name"==value._astname?BlockMirrorTextToBlocks.create_block("ast_Attribute",node.lineno,{VALUE:Sk.ffi.remapToJs(value.id),ATTR:Sk.ffi.remapToJs(attr)}):BlockMirrorTextToBlocks.create_block("ast_AttributeFull",node.lineno,{ATTR:Sk.ffi.remapToJs(attr)},{VALUE:this.convert(value,node)})},Blockly.Blocks.ast_Call={init:function init(){this.givenColour_=BlockMirrorTextToBlocks.COLOR.FUNCTIONS,this.setInputsInline(!0),this.arguments_=[],this.argumentVarModels_=[],this.argumentCount_=0,this.quarkConnections_={},this.quarkIds_=null,this.showParameterNames_=!1,this.returns_=!0,this.isMethod_=!1,this.name_=null,this.message_="function",this.premessage_="",this.module_="",this.updateShape_()},getProcedureCall:function getProcedureCall(){return this.name_},renameProcedure:function renameProcedure(oldName,newName){(null===this.name_||Blockly.Names.equals(oldName,this.name_))&&(this.name_=newName,this.updateShape_())},setProcedureParameters_:function setProcedureParameters_(paramNames,paramIds){var defBlock=Blockly.Procedures.getDefinition(this.getProcedureCall(),this.workspace),mutatorOpen=defBlock&&defBlock.mutator&&defBlock.mutator.isVisible();if(mutatorOpen||(this.quarkConnections_={},this.quarkIds_=null),!paramIds)return!1;if(paramNames.join("\n")==this.arguments_.join("\n"))return this.quarkIds_=paramIds,!1;if(paramIds.length!==paramNames.length)throw RangeError("paramNames and paramIds must be the same length.");this.setCollapsed(!1),this.quarkIds_||(this.quarkConnections_={},this.quarkIds_=[]);var savedRendered=this.rendered;this.rendered=!1;for(var i=0;i<this.arguments_.length;i++){var input=this.getInput("ARG"+i);if(input){var connection=input.connection.targetConnection;this.quarkConnections_[this.quarkIds_[i]]=connection,mutatorOpen&&connection&&-1===paramIds.indexOf(this.quarkIds_[i])&&(connection.disconnect(),connection.getSourceBlock().bumpNeighbours_())}}if(this.arguments_=[].concat(paramNames),this.argumentCount_=this.arguments_.length,this.argumentVarModels_=[],this.updateShape_(),this.quarkIds_=paramIds,this.quarkIds_)for(var _i4=0;_i4<this.arguments_.length;_i4++){var quarkId=this.quarkIds_[_i4];if(quarkId in this.quarkConnections_){var _connection=this.quarkConnections_[quarkId];Blockly.Mutator.reconnect(_connection,this,"ARG"+_i4)||delete this.quarkConnections_[quarkId]}}return this.rendered=savedRendered,this.rendered&&this.render(),!0},updateShape_:function updateShape_(){if(this.isMethod_&&!this.getInput("FUNC")){var func=this.appendValueInput("FUNC");""!==this.premessage_&&func.appendField(this.premessage_)}else!this.isMethod_&&this.getInput("FUNC")&&this.removeInput("FUNC");var drawnArgumentCount=this.getDrawnArgumentCount_(),message=this.getInput("MESSAGE_AREA"),i;for(0===drawnArgumentCount?(message?message.removeField("MESSAGE"):message=this.appendDummyInput("MESSAGE_AREA").setAlign(Blockly.ALIGN_RIGHT),message.appendField(new Blockly.FieldLabel(this.message_+" ("),"MESSAGE")):message&&this.removeInput("MESSAGE_AREA"),i=0;i<drawnArgumentCount;i++){var argument=this.arguments_[i],argumentName=this.parseArgument_(argument);0===i&&(argumentName=this.message_+" ("+argumentName);var field=this.getField("ARGNAME"+i);if(field){Blockly.Events.disable();try{field.setValue(argumentName)}finally{Blockly.Events.enable()}}else field=new Blockly.FieldLabel(argumentName),this.appendValueInput("ARG"+i).setAlign(Blockly.ALIGN_RIGHT).appendField(field,"ARGNAME"+i).init();argumentName?field.setVisible(!0):field.setVisible(!1)}this.getInput("CLOSE_PAREN")||this.appendDummyInput("CLOSE_PAREN").setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldLabel(")")),0===drawnArgumentCount?(this.isMethod_&&this.moveInputBefore("FUNC","MESSAGE_AREA"),this.moveInputBefore("MESSAGE_AREA","CLOSE_PAREN")):this.isMethod_&&this.moveInputBefore("FUNC","CLOSE_PAREN");for(var j=0;j<i;j++)this.moveInputBefore("ARG"+j,"CLOSE_PAREN");for(this.setReturn_(this.returns_,!1);this.getInput("ARG"+i);)this.removeInput("ARG"+i),i++;this.setColour(this.givenColour_)},mutationToDom:function mutationToDom(){var container=document.createElement("mutation"),name=this.getProcedureCall();container.setAttribute("name",null===name?"*":name),container.setAttribute("arguments",this.argumentCount_),container.setAttribute("returns",this.returns_),container.setAttribute("parameters",this.showParameterNames_),container.setAttribute("method",this.isMethod_),container.setAttribute("message",this.message_),container.setAttribute("premessage",this.premessage_),container.setAttribute("module",this.module_),container.setAttribute("colour",this.givenColour_);for(var i=0;i<this.arguments_.length;i++){var parameter=document.createElement("arg");parameter.setAttribute("name",this.arguments_[i]),container.appendChild(parameter)}return container},domToMutation:function domToMutation(xmlElement){this.name_=xmlElement.getAttribute("name"),this.name_="*"===this.name_?null:this.name_,this.argumentCount_=parseInt(xmlElement.getAttribute("arguments"),10),this.showParameterNames_="true"===xmlElement.getAttribute("parameters"),this.returns_="true"===xmlElement.getAttribute("returns"),this.isMethod_="true"===xmlElement.getAttribute("method"),this.message_=xmlElement.getAttribute("message"),this.premessage_=xmlElement.getAttribute("premessage"),this.module_=xmlElement.getAttribute("module"),this.givenColour_=parseInt(xmlElement.getAttribute("colour"),10);for(var args=[],paramIds=[],i=0,childNode;childNode=xmlElement.childNodes[i];i++)"arg"===childNode.nodeName.toLowerCase()&&(args.push(childNode.getAttribute("name")),paramIds.push(childNode.getAttribute("paramId")));var result;this.setProcedureParameters_(args,paramIds)||this.updateShape_(),null!==this.name_&&this.renameProcedure(this.getProcedureCall(),this.name_)},getVarModels:function getVarModels(){return this.argumentVarModels_},customContextMenu:function customContextMenu(options){if(this.workspace.isMovable()){var workspace=this.workspace,block=this,option={enabled:!0};option.text=Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF;var name=this.getProcedureCall();option.callback=function(){var def=Blockly.Procedures.getDefinition(name,workspace);def&&(workspace.centerOnBlock(def.id),def.select())},options.push(option),options.push({enabled:!0,text:"Show/Hide parameters",callback:function callback(){block.showParameterNames_=!block.showParameterNames_,block.updateShape_(),block.render()}}),options.push({enabled:!0,text:this.returns_?"Make statement":"Make expression",callback:function callback(){block.returns_=!block.returns_,block.setReturn_(block.returns_,!0)}})}},setReturn_:function setReturn_(returnState,forceRerender){this.unplug(!0),returnState?(this.setPreviousStatement(!1),this.setNextStatement(!1),this.setOutput(!0)):(this.setOutput(!1),this.setPreviousStatement(!0),this.setNextStatement(!0)),forceRerender&&this.rendered&&this.render()},parseArgument_:function parseArgument_(argument){return argument.startsWith("KWARGS:")?"unpack":argument.startsWith("KEYWORD:")?argument.substring(8)+"=":this.showParameterNames_&&argument.startsWith("KNOWN_ARG:")?argument.substring(10)+"=":""},getDrawnArgumentCount_:function getDrawnArgumentCount_(){return Math.min(this.argumentCount_,this.arguments_.length)}},Blockly.Python.ast_Call=function(block){block.module_&&(Blockly.Python.definitions_["import_"+block.module_]=BlockMirrorTextToBlocks.prototype.MODULE_FUNCTION_IMPORTS[block.module_]);var funcName="";block.isMethod_&&(funcName=Blockly.Python.valueToCode(block,"FUNC",Blockly.Python.ORDER_FUNCTION_CALL)||Blockly.Python.blank),funcName+=this.name_;for(var args=[],i=0;i<block.arguments_.length;i++){var value=Blockly.Python.valueToCode(block,"ARG"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank,argument=block.arguments_[i];argument.startsWith("KWARGS:")?args[i]="**"+value:argument.startsWith("KEYWORD:")?args[i]=argument.substring(8)+"="+value:args[i]=value}var code=funcName+"("+args.join(", ")+")";return block.returns_?[code,Blockly.Python.ORDER_FUNCTION_CALL]:code+"\n"},BlockMirrorTextToBlocks.prototype.getAsModule=function(node){if("Name"===node._astname)return Sk.ffi.remapToJs(node.id);if("Attribute"!==node._astname)return null;var origin=this.getAsModule(node.value);return null!==origin?origin+"."+Sk.ffi.remapToJs(node.attr):void 0},BlockMirrorTextToBlocks.prototype.ast_Call=function(node,parent){var func=node.func,args=node.args,keywords=node.keywords,signature=null,isMethod=!1,module=null,premessage="",message="",name="",caller=null,colour=BlockMirrorTextToBlocks.COLOR.FUNCTIONS;if("Name"===func._astname)message=name=Sk.ffi.remapToJs(func.id),name in this.FUNCTION_SIGNATURES&&(signature=this.FUNCTION_SIGNATURES[Sk.ffi.remapToJs(func.id)]);else if("Attribute"===func._astname){isMethod=!0,caller=func.value;var potentialModule=this.getAsModule(caller),attributeName=Sk.ffi.remapToJs(func.attr);message="."+attributeName,potentialModule in this.MODULE_FUNCTION_SIGNATURES?(signature=this.MODULE_FUNCTION_SIGNATURES[potentialModule][attributeName],module=potentialModule,message=name=potentialModule+message,isMethod=!1):attributeName in this.METHOD_SIGNATURES?(signature=this.METHOD_SIGNATURES[attributeName],name=message):name=message}else isMethod=!0,message="",name="",caller=func;var returns=!0;if(null!=signature){if(signature.custom)try{return signature.custom(node,parent,this)}catch(e){console.error(e)}"returns"in signature&&(returns=signature.returns),"message"in signature&&(message=signature.message),"premessage"in signature&&(premessage=signature.premessage),"colour"in signature&&(colour=signature.colour)}returns=returns||"Expr"!==parent._astname;var argumentsNormal={},argumentsMutation={"@arguments":(null!==args?args.length:0)+(null!==keywords?keywords.length:0),"@returns":returns,"@parameters":!0,"@method":isMethod,"@name":name,"@message":message,"@premessage":premessage,"@colour":colour,"@module":module||""},overallI=0,newBlock;if(null!==args)for(var i=0;i<args.length;i+=1,overallI+=1)argumentsNormal["ARG"+overallI]=this.convert(args[i],node),argumentsMutation["UNKNOWN_ARG:"+overallI]=null;if(null!==keywords)for(var _i5=0;_i5<keywords.length;_i5+=1,overallI+=1){var keyword=keywords[_i5],arg=keyword.arg,value=keyword.value;null===arg?(argumentsNormal["ARG"+overallI]=this.convert(value,node),argumentsMutation["KWARGS:"+overallI]=null):(argumentsNormal["ARG"+overallI]=this.convert(value,node),argumentsMutation["KEYWORD:"+Sk.ffi.remapToJs(arg)]=null)}return isMethod?(argumentsNormal.FUNC=this.convert(caller,node),newBlock=BlockMirrorTextToBlocks.create_block("ast_Call",node.lineno,{},argumentsNormal,{inline:!0},argumentsMutation)):newBlock=BlockMirrorTextToBlocks.create_block("ast_Call",node.lineno,{},argumentsNormal,{inline:!0},argumentsMutation),returns?newBlock:[newBlock]},Blockly.Blocks.ast_Raise={init:function init(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.EXCEPTIONS),this.exc_=!0,this.cause_=!1,this.appendDummyInput().appendField("raise"),this.updateShape_()},updateShape_:function updateShape_(){this.exc_&&!this.getInput("EXC")?this.appendValueInput("EXC").setCheck(null):!this.exc_&&this.getInput("EXC")&&this.removeInput("EXC"),this.cause_&&!this.getInput("CAUSE")?this.appendValueInput("CAUSE").setCheck(null).appendField("from"):!this.cause_&&this.getInput("CAUSE")&&this.removeInput("CAUSE"),this.cause_&&this.exc_&&this.moveInputBefore("EXC","CAUSE")},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("exc",this.exc_),container.setAttribute("cause",this.cause_),container},domToMutation:function domToMutation(xmlElement){this.exc_="true"===xmlElement.getAttribute("exc"),this.cause_="true"===xmlElement.getAttribute("cause"),this.updateShape_()}},Blockly.Python.ast_Raise=function(block){if(this.exc_){var exc=Blockly.Python.valueToCode(block,"EXC",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,cause;return this.cause_?"raise "+exc+" from "+(Blockly.Python.valueToCode(block,"CAUSE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+"\n":"raise "+exc+"\n"}return"raise\n"},BlockMirrorTextToBlocks.prototype.ast_Raise=function(node,parent){var exc=node.exc,cause=node.cause,values={},hasExc=!1,hasCause=!1;return null!==exc&&(values.EXC=this.convert(exc,node),hasExc=!0),null!==cause&&(values.CAUSE=this.convert(cause,node),hasCause=!0),BlockMirrorTextToBlocks.create_block("ast_Raise",node.lineno,{},values,{},{"@exc":hasExc,"@cause":hasCause})},Blockly.Blocks.ast_Delete={init:function init(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.targetCount_=1,this.appendDummyInput().appendField("delete"),this.updateShape_()},updateShape_:function updateShape_(){for(var i=0;i<this.targetCount_;i++)if(!this.getInput("TARGET"+i)){var input=this.appendValueInput("TARGET"+i);0!==i&&input.appendField(",").setAlign(Blockly.ALIGN_RIGHT)}for(;this.getInput("TARGET"+i);)this.removeInput("TARGET"+i),i++},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("targets",this.targetCount_),container},domToMutation:function domToMutation(xmlElement){this.targetCount_=parseInt(xmlElement.getAttribute("targets"),10),this.updateShape_()}},Blockly.Python.ast_Delete=function(block){for(var elements=new Array(block.targetCount_),i=0;i<block.targetCount_;i++)elements[i]=Blockly.Python.valueToCode(block,"TARGET"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var code;return"del "+elements.join(", ")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Delete=function(node,parent){var targets=node.targets;return BlockMirrorTextToBlocks.create_block("ast_Delete",node.lineno,{},this.convertElements("TARGET",targets,node),{inline:"true"},{"@targets":targets.length})},Blockly.Blocks.ast_Subscript={init:function init(){this.setInputsInline(!0),this.setOutput(!0),this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.sliceKinds_=["I"],this.appendValueInput("VALUE").setCheck(null),this.appendDummyInput("OPEN_BRACKET").appendField("["),this.appendDummyInput("CLOSE_BRACKET").appendField("]"),this.updateShape_()},setExistence:function setExistence(label,exist,isDummy){return exist&&!this.getInput(label)?isDummy?this.appendDummyInput(label):this.appendValueInput(label):(!exist&&this.getInput(label)&&this.removeInput(label),null)},createSlice_:function createSlice_(i,kind){var input=this.setExistence("COMMA"+i,0!==i,!0);input&&input.appendField(",");var isIndex="I"===kind.charAt(0);input=this.setExistence("INDEX"+i,isIndex,!1),input=this.setExistence("SLICELOWER"+i,!isIndex&&"1"===kind.charAt(1),!1),(input=this.setExistence("SLICECOLON"+i,!isIndex,!0))&&input.appendField(":").setAlign(Blockly.ALIGN_RIGHT),input=this.setExistence("SLICEUPPER"+i,!isIndex&&"1"===kind.charAt(2),!1),(input=this.setExistence("SLICESTEP"+i,!isIndex&&"1"===kind.charAt(3),!1))&&input.appendField(":").setAlign(Blockly.ALIGN_RIGHT)},updateShape_:function updateShape_(){for(var i=0;i<this.sliceKinds_.length;i++)this.createSlice_(i,this.sliceKinds_[i]);for(var j=0;j<i;j++){0!==j&&this.moveInputBefore("COMMA"+j,"CLOSE_BRACKET");var kind=this.sliceKinds_[j];"I"===kind.charAt(0)?this.moveInputBefore("INDEX"+j,"CLOSE_BRACKET"):("1"===kind.charAt(1)&&this.moveInputBefore("SLICELOWER"+j,"CLOSE_BRACKET"),this.moveInputBefore("SLICECOLON"+j,"CLOSE_BRACKET"),"1"===kind.charAt(2)&&this.moveInputBefore("SLICEUPPER"+j,"CLOSE_BRACKET"),"1"===kind.charAt(3)&&this.moveInputBefore("SLICESTEP"+j,"CLOSE_BRACKET"))}for(;this.getInput("TARGET"+i)||this.getInput("SLICECOLON");)this.removeInput("COMMA"+i,!0),this.getInput("INDEX"+i)?this.removeInput("INDEX"+i):(this.removeInput("SLICELOWER"+i,!0),this.removeInput("SLICECOLON"+i,!0),this.removeInput("SLICEUPPER"+i,!0),this.removeInput("SLICESTEP"+i,!0)),i++},mutationToDom:function mutationToDom(){for(var container=document.createElement("mutation"),i=0;i<this.sliceKinds_.length;i++){var parameter=document.createElement("arg");parameter.setAttribute("name",this.sliceKinds_[i]),container.appendChild(parameter)}return container},domToMutation:function domToMutation(xmlElement){this.sliceKinds_=[];for(var i=0,childNode;childNode=xmlElement.childNodes[i];i++)"arg"===childNode.nodeName.toLowerCase()&&this.sliceKinds_.push(childNode.getAttribute("name"));this.updateShape_()}},Blockly.Python.ast_Subscript=function(block){for(var value=Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank,slices=new Array(block.sliceKinds_.length),i=0;i<block.sliceKinds_.length;i++){var kind=block.sliceKinds_[i];"I"===kind.charAt(0)?slices[i]=Blockly.Python.valueToCode(block,"INDEX"+i,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank:(slices[i]="","1"===kind.charAt(1)&&(slices[i]+=Blockly.Python.valueToCode(block,"SLICELOWER"+i,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank),slices[i]+=":","1"===kind.charAt(2)&&(slices[i]+=Blockly.Python.valueToCode(block,"SLICEUPPER"+i,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank),"1"===kind.charAt(3)&&(slices[i]+=":"+Blockly.Python.valueToCode(block,"SLICESTEP"+i,Blockly.Python.ORDER_MEMBER)||Blockly.Python.blank))}var code;return[value+"["+slices.join(", ")+"]",Blockly.Python.ORDER_MEMBER]};var isWeirdSliceCase=function isWeirdSliceCase(slice){return null==slice.lower&&null==slice.upper&&null!==slice.step&&"NameConstant"===slice.step._astname&&slice.step.value===Sk.builtin.none.none$};BlockMirrorTextToBlocks.prototype.addSliceDim=function(slice,i,values,mutations,node){var sliceKind=slice._astname;if("Index"===sliceKind)values["INDEX"+i]=this.convert(slice.value,node),mutations.push("I");else if("Slice"===sliceKind){var L="0",U="0",S="0";null!==slice.lower&&(values["SLICELOWER"+i]=this.convert(slice.lower,node),L="1"),null!==slice.upper&&(values["SLICEUPPER"+i]=this.convert(slice.upper,node),U="1"),null===slice.step||isWeirdSliceCase(slice)||(values["SLICESTEP"+i]=this.convert(slice.step,node),S="1"),mutations.push("S"+L+U+S)}},BlockMirrorTextToBlocks.prototype.ast_Subscript=function(node,parent){var value=node.value,slice=node.slice,ctx=node.ctx,values={VALUE:this.convert(value,node)},mutations=[],sliceKind;if("ExtSlice"===slice._astname)for(var i=0;i<slice.dims.length;i+=1){var dim=slice.dims[i];this.addSliceDim(dim,i,values,mutations,node)}else this.addSliceDim(slice,0,values,mutations,node);return BlockMirrorTextToBlocks.create_block("ast_Subscript",node.lineno,{},values,{inline:"true"},{arg:mutations})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_comprehensionFor",message0:"for %1 in %2",args0:[{type:"input_value",name:"TARGET"},{type:"input_value",name:"ITER"}],inputsInline:!0,output:"ComprehensionFor",colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_comprehensionIf",message0:"if %1",args0:[{type:"input_value",name:"TEST"}],inputsInline:!0,output:"ComprehensionIf",colour:BlockMirrorTextToBlocks.COLOR.SEQUENCES}),Blockly.Blocks.ast_Comp_create_with_container={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.appendDummyInput().appendField("Add new comprehensions below"),this.appendDummyInput().appendField("   For clause"),this.appendStatementInput("STACK"),this.contextMenu=!1}},Blockly.Blocks.ast_Comp_create_with_for={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.appendDummyInput().appendField("For clause"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},Blockly.Blocks.ast_Comp_create_with_if={init:function init(){this.setColour(BlockMirrorTextToBlocks.COLOR.SEQUENCES),this.appendDummyInput().appendField("If clause"),this.setPreviousStatement(!0),this.setNextStatement(!0),this.contextMenu=!1}},BlockMirrorTextToBlocks.COMP_SETTINGS={ListComp:{start:"[",end:"]",color:BlockMirrorTextToBlocks.COLOR.LIST},SetComp:{start:"{",end:"}",color:BlockMirrorTextToBlocks.COLOR.SET},GeneratorExp:{start:"(",end:")",color:BlockMirrorTextToBlocks.COLOR.SEQUENCES},DictComp:{start:"{",end:"}",color:BlockMirrorTextToBlocks.COLOR.DICTIONARY}},["ListComp","SetComp","GeneratorExp","DictComp"].forEach((function(kind){Blockly.Blocks["ast_"+kind]={init:function init(){this.setStyle("loop_blocks"),this.setColour(BlockMirrorTextToBlocks.COMP_SETTINGS[kind].color),this.itemCount_=3;var input=this.appendValueInput("ELT").appendField(BlockMirrorTextToBlocks.COMP_SETTINGS[kind].start);"DictComp"===kind&&input.setCheck("DictPair"),this.appendDummyInput("END_BRACKET").appendField(BlockMirrorTextToBlocks.COMP_SETTINGS[kind].end),this.updateShape_(),this.setOutput(!0),this.setMutator(new Blockly.Mutator(["ast_Comp_create_with_for","ast_Comp_create_with_if"]))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("items",this.itemCount_),container},domToMutation:function domToMutation(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute("items"),10),this.updateShape_()},decompose:function decompose(workspace){var containerBlock=workspace.newBlock("ast_Comp_create_with_container");containerBlock.initSvg();for(var connection=containerBlock.getInput("STACK").connection,generators=[],i=1;i<this.itemCount_;i++){var generator=this.getInput("GENERATOR"+i).connection,createName=void 0;if("ast_comprehensionIf"===generator.targetConnection.getSourceBlock().type)createName="ast_Comp_create_with_if";else{if("ast_comprehensionFor"!==generator.targetConnection.getSourceBlock().type)throw Error("Unknown block type: "+generator.targetConnection.getSourceBlock().type);createName="ast_Comp_create_with_for"}var itemBlock=workspace.newBlock(createName);itemBlock.initSvg(),connection.connect(itemBlock.previousConnection),connection=itemBlock.nextConnection,generators.push(itemBlock)}return containerBlock},compose:function compose(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),connections=[containerBlock.valueConnection_],blockTypes=["ast_Comp_create_with_for"];itemBlock;)connections.push(itemBlock.valueConnection_),blockTypes.push(itemBlock.type),itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();for(var i=1;i<this.itemCount_;i++){var connection=this.getInput("GENERATOR"+i).connection.targetConnection;if(connection&&-1===connections.indexOf(connection)){var connectedBlock=connection.getSourceBlock();if("ast_comprehensionIf"===connectedBlock.type){var testField=connectedBlock.getInput("TEST");testField.connection.targetConnection&&testField.connection.targetConnection.getSourceBlock().unplug(!0)}else{if("ast_comprehensionFor"!==connectedBlock.type)throw Error("Unknown block type: "+connectedBlock.type);var iterField=connectedBlock.getInput("ITER");iterField.connection.targetConnection&&iterField.connection.targetConnection.getSourceBlock().unplug(!0);var targetField=connectedBlock.getInput("TARGET");targetField.connection.targetConnection&&targetField.connection.targetConnection.getSourceBlock().unplug(!0)}connection.disconnect(),connection.getSourceBlock().dispose()}}this.itemCount_=connections.length,this.updateShape_();for(var i=1;i<this.itemCount_;i++)if(Blockly.Mutator.reconnect(connections[i],this,"GENERATOR"+i),!connections[i]){var createName=void 0;if("ast_Comp_create_with_if"===blockTypes[i])createName="ast_comprehensionIf";else{if("ast_Comp_create_with_for"!==blockTypes[i])throw Error("Unknown block type: "+blockTypes[i]);createName="ast_comprehensionFor"}var _itemBlock2=this.workspace.newBlock(createName);_itemBlock2.setDeletable(!1),_itemBlock2.setMovable(!1),_itemBlock2.initSvg(),this.getInput("GENERATOR"+i).connection.connect(_itemBlock2.outputConnection),_itemBlock2.render()}},saveConnections:function saveConnections(containerBlock){containerBlock.valueConnection_=this.getInput("GENERATOR0").connection.targetConnection;for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),i=1;itemBlock;){var input=this.getInput("GENERATOR"+i);itemBlock.valueConnection_=input&&input.connection.targetConnection,i++,itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock()}},updateShape_:function updateShape_(){for(var i=0;i<this.itemCount_;i++)if(!this.getInput("GENERATOR"+i)){var input=this.appendValueInput("GENERATOR"+i);0===i?input.setCheck("ComprehensionFor"):input.setCheck(["ComprehensionFor","ComprehensionIf"]),this.moveInputBefore("GENERATOR"+i,"END_BRACKET")}for(;this.getInput("GENERATOR"+i);)this.removeInput("GENERATOR"+i),i++}},Blockly.Python["ast_"+kind]=function(block){var elt,code;if("DictComp"===kind){var child=block.getInputTargetBlock("ELT"),key,value;if(null===child||"ast_DictItem"!==child.type)elt=Blockly.Python.blank+": "+Blockly.Python.blank;else elt=(Blockly.Python.valueToCode(child,"KEY",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+": "+(Blockly.Python.valueToCode(child,"VALUE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)}else elt=Blockly.Python.valueToCode(block,"ELT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;for(var elements=new Array(block.itemCount_),BAD_DEFAULT=elt+" for "+Blockly.Python.blank+" in"+Blockly.Python.blank,i=0;i<block.itemCount_;i++){var _child=block.getInputTargetBlock("GENERATOR"+i);if(null===_child)elements[i]=BAD_DEFAULT;else if("ast_comprehensionIf"===_child.type){var test=Blockly.Python.valueToCode(_child,"TEST",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;elements[i]="if "+test}else if("ast_comprehensionFor"===_child.type){var target=Blockly.Python.valueToCode(_child,"TARGET",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,iter=Blockly.Python.valueToCode(_child,"ITER",Blockly.Python.ORDER_NONE)||Blockly.Python.blank;elements[i]="for "+target+" in "+iter}else elements[i]=BAD_DEFAULT}return[BlockMirrorTextToBlocks.COMP_SETTINGS[kind].start+elt+" "+elements.join(" ")+BlockMirrorTextToBlocks.COMP_SETTINGS[kind].end,Blockly.Python.ORDER_ATOMIC]},BlockMirrorTextToBlocks.prototype["ast_"+kind]=function(node,parent){var generators=node.generators,elements={};if("DictComp"===kind){var key=node.key,value=node.value;elements.ELT=BlockMirrorTextToBlocks.create_block("ast_DictItem",node.lineno,{},{KEY:this.convert(key,node),VALUE:this.convert(value,node)},{inline:"true",deletable:"false",movable:"false"})}else{var elt=node.elt;elements.ELT=this.convert(elt,node)}for(var DEFAULT_SETTINGS={inline:"true",deletable:"false",movable:"false"},g=0,i=0;i<generators.length;i++){var target=generators[i].target,iter=generators[i].iter,ifs=generators[i].ifs,is_async=generators[i].is_async;if(elements["GENERATOR"+g]=BlockMirrorTextToBlocks.create_block("ast_comprehensionFor",node.lineno,{},{ITER:this.convert(iter,node),TARGET:this.convert(target,node)},DEFAULT_SETTINGS),g+=1,ifs)for(var j=0;j<ifs.length;j++)elements["GENERATOR"+g]=BlockMirrorTextToBlocks.create_block("ast_comprehensionIf",node.lineno,{},{TEST:this.convert(ifs[j],node)},DEFAULT_SETTINGS),g+=1}return BlockMirrorTextToBlocks.create_block("ast_"+kind,node.lineno,{},elements,{inline:"false"},{"@items":g})}})),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_FunctionHeaderMutator",message0:"Setup parameters below: %1 %2 returns %3",args0:[{type:"input_dummy"},{type:"input_statement",name:"STACK",align:"RIGHT"},{type:"field_checkbox",name:"RETURNS",checked:!0,align:"RIGHT"}],colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS,enableContextMenu:!1}),[["Parameter","Parameter","",!1,!1],["ParameterType","Parameter with type","",!0,!1],["ParameterDefault","Parameter with default value","",!1,!0],["ParameterDefaultType","Parameter with type and default value","",!0,!0],["ParameterVararg","Variable length parameter","*",!1,!1],["ParameterVarargType","Variable length parameter with type","*",!0,!1],["ParameterKwarg","Keyworded Variable length parameter","**",!1],["ParameterKwargType","Keyworded Variable length parameter with type","**",!0,!1]].forEach((function(parameterTypeTuple){var parameterType=parameterTypeTuple[0],parameterDescription=parameterTypeTuple[1],parameterPrefix=parameterTypeTuple[2],parameterTyped=parameterTypeTuple[3],parameterDefault=parameterTypeTuple[4];BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_FunctionMutant"+parameterType,message0:parameterDescription,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS,enableContextMenu:!1});var realParameterBlock={type:"ast_Function"+parameterType,output:"Parameter",message0:parameterPrefix+(parameterPrefix?" ":"")+"%1",args0:[{type:"field_variable",name:"NAME",variable:"param"}],colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS,enableContextMenu:!1,inputsInline:parameterTyped&&parameterDefault};parameterTyped&&(realParameterBlock.message0+=" : %2",realParameterBlock.args0.push({type:"input_value",name:"TYPE"})),parameterDefault&&(realParameterBlock.message0+=" = %"+(parameterTyped?3:2),realParameterBlock.args0.push({type:"input_value",name:"DEFAULT"})),BlockMirrorTextToBlocks.BLOCKS.push(realParameterBlock),Blockly.Python["ast_Function"+parameterType]=function(block){var name=Blockly.Python.variableDB_.getName(block.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),typed="";parameterTyped&&(typed=": "+(Blockly.Python.valueToCode(block,"TYPE",Blockly.Python.ORDER_NONE)||Blockly.Python.blank));var defaulted="";return parameterDefault&&(defaulted="="+(Blockly.Python.valueToCode(block,"DEFAULT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)),[parameterPrefix+name+typed+defaulted,Blockly.Python.ORDER_ATOMIC]}})),Blockly.Blocks.ast_FunctionDef={init:function init(){this.appendDummyInput().appendField("define").appendField(new Blockly.FieldTextInput("function"),"NAME"),this.decoratorsCount_=0,this.parametersCount_=0,this.hasReturn_=!1,this.mutatorComplexity_=0,this.appendStatementInput("BODY").setCheck(null),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.FUNCTIONS),this.updateShape_(),this.setMutator(new Blockly.Mutator(["ast_FunctionMutantParameter","ast_FunctionMutantParameterType"]))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("decorators",this.decoratorsCount_),container.setAttribute("parameters",this.parametersCount_),container.setAttribute("returns",this.hasReturn_),container},domToMutation:function domToMutation(xmlElement){this.decoratorsCount_=parseInt(xmlElement.getAttribute("decorators"),10),this.parametersCount_=parseInt(xmlElement.getAttribute("parameters"),10),this.hasReturn_="true"===xmlElement.getAttribute("returns"),this.updateShape_()},setReturnAnnotation_:function setReturnAnnotation_(status){var currentReturn=this.getInput("RETURNS");status?(currentReturn||this.appendValueInput("RETURNS").setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField("returns"),this.moveInputBefore("RETURNS","BODY")):!status&&currentReturn&&this.removeInput("RETURNS"),this.hasReturn_=status},updateShape_:function updateShape_(){var block=this,position=1;[["DECORATOR","decoratorsCount_",null,"decorated by"],["PARAMETER","parametersCount_","Parameter","parameters:"]].forEach((function(childTypeTuple){for(var childTypeName=childTypeTuple[0],countVariable=childTypeTuple[1],inputCheck=childTypeTuple[2],childTypeMessage=childTypeTuple[3],i=0;i<block[countVariable];i++){if(!block.getInput(childTypeName+i)){var input=block.appendValueInput(childTypeName+i).setCheck(inputCheck).setAlign(Blockly.ALIGN_RIGHT);0===i&&input.appendField(childTypeMessage)}block.moveInputBefore(childTypeName+i,"BODY")}for(;block.getInput(childTypeName+i);)block.removeInput(childTypeName+i),i++})),this.setReturnAnnotation_(this.hasReturn_)},decompose:function decompose(workspace){var containerBlock=workspace.newBlock("ast_FunctionHeaderMutator");containerBlock.initSvg(),this.getInput("RETURNS")&&containerBlock.setFieldValue(this.hasReturn_?"TRUE":"FALSE","RETURNS");for(var connection=containerBlock.getInput("STACK").connection,parameters=[],i=0;i<this.parametersCount_;i++){var parameter,sourceType,createName="ast_FunctionMutant"+this.getInput("PARAMETER"+i).connection.targetConnection.getSourceBlock().type.substring("ast_Function".length),itemBlock=workspace.newBlock(createName);itemBlock.initSvg(),connection.connect(itemBlock.previousConnection),connection=itemBlock.nextConnection,parameters.push(itemBlock)}return containerBlock},compose:function compose(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),connections=[],blockTypes=[];itemBlock;)connections.push(itemBlock.valueConnection_),blockTypes.push(itemBlock.type),itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock();for(var i=0;i<this.parametersCount_;i++){var connection=this.getInput("PARAMETER"+i).connection.targetConnection;if(connection&&-1===connections.indexOf(connection)){for(var connectedBlock=connection.getSourceBlock(),j=0;j<connectedBlock.inputList.length;j++){var field=connectedBlock.inputList[j].connection;field&&field.targetConnection&&field.targetConnection.getSourceBlock().unplug(!0)}connection.disconnect(),connection.getSourceBlock().dispose()}}this.parametersCount_=connections.length,this.updateShape_();for(var _i6=0;_i6<this.parametersCount_;_i6++)if(Blockly.Mutator.reconnect(connections[_i6],this,"PARAMETER"+_i6),!connections[_i6]){var createName="ast_Function"+blockTypes[_i6].substring("ast_FunctionMutant".length),_itemBlock3=this.workspace.newBlock(createName);_itemBlock3.setDeletable(!1),_itemBlock3.setMovable(!1),_itemBlock3.initSvg(),this.getInput("PARAMETER"+_i6).connection.connect(_itemBlock3.outputConnection),_itemBlock3.render()}var hasReturns=containerBlock.getFieldValue("RETURNS");if(null!==hasReturns&&(hasReturns="TRUE"===hasReturns,this.hasReturn_!=hasReturns))if(hasReturns)this.setReturnAnnotation_(!0),Blockly.Mutator.reconnect(this.returnConnection_,this,"RETURNS"),this.returnConnection_=null;else{var returnConnection=this.getInput("RETURNS").connection;if(this.returnConnection_=returnConnection.targetConnection,this.returnConnection_){var returnBlock=returnConnection.targetBlock();returnBlock.unplug(),returnBlock.bumpNeighbours_()}this.setReturnAnnotation_(!1)}},saveConnections:function saveConnections(containerBlock){for(var itemBlock=containerBlock.getInputTargetBlock("STACK"),i=0;itemBlock;){var input=this.getInput("PARAMETER"+i);itemBlock.valueConnection_=input&&input.connection.targetConnection,i++,itemBlock=itemBlock.nextConnection&&itemBlock.nextConnection.targetBlock()}}},Blockly.Python.ast_FunctionDef=function(block){for(var name=Blockly.Python.variableDB_.getName(block.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),decorators=new Array(block.decoratorsCount_),i=0;i<block.decoratorsCount_;i++){var decorator=Blockly.Python.valueToCode(block,"DECORATOR"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;decorators[i]="@"+decorator+"\n"}for(var parameters=new Array(block.parametersCount_),_i7=0;_i7<block.parametersCount_;_i7++)parameters[_i7]=Blockly.Python.valueToCode(block,"PARAMETER"+_i7,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var returns="";this.hasReturn_&&(returns=" -> "+Blockly.Python.valueToCode(block,"RETURNS",Blockly.Python.ORDER_NONE)||Blockly.Python.blank);var body=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS;return decorators.join("")+"def "+name+"("+parameters.join(", ")+")"+returns+":\n"+body},BlockMirrorTextToBlocks.prototype.parseArg=function(arg,type,lineno,values,node){var settings={movable:!1,deletable:!1};return null===arg.annotation?BlockMirrorTextToBlocks.create_block(type,lineno,{NAME:Sk.ffi.remapToJs(arg.arg)},values,settings):(values.TYPE=this.convert(arg.annotation,node),BlockMirrorTextToBlocks.create_block(type+"Type",lineno,{NAME:Sk.ffi.remapToJs(arg.arg)},values,settings))},BlockMirrorTextToBlocks.prototype.parseArgs=function(args,values,lineno,node){var positional=args.args,vararg=args.vararg,kwonlyargs=args.kwonlyargs,kwarg=args.kwarg,defaults=args.defaults,kw_defaults=args.kw_defaults,totalArgs=0;if(null!==positional)for(var defaultOffset=defaults?defaults.length-positional.length:0,i=0;i<positional.length;i++){var childValues={},type="ast_FunctionParameter";defaults[defaultOffset+i]&&(childValues.DEFAULT=this.convert(defaults[defaultOffset+i],node),type+="Default"),values["PARAMETER"+totalArgs]=this.parseArg(positional[i],type,lineno,childValues,node),totalArgs+=1}if(null!==vararg&&(values["PARAMETER"+totalArgs]=this.parseArg(vararg,"ast_FunctionParameterVararg",lineno,{},node),totalArgs+=1),null!==kwonlyargs)for(var _i8=0;_i8<kwonlyargs.length;_i8++){var _childValues={},_type="ast_FunctionParameter";kw_defaults[_i8]&&(_childValues.DEFAULT=this.convert(kw_defaults[_i8],node),_type+="Default"),values["PARAMETER"+totalArgs]=this.parseArg(kwonlyargs[_i8],_type,lineno,_childValues,node),totalArgs+=1}return kwarg&&(values["PARAMETER"+totalArgs]=this.parseArg(kwarg,"ast_FunctionParameterKwarg",lineno,{},node),totalArgs+=1),totalArgs},BlockMirrorTextToBlocks.prototype.ast_FunctionDef=function(node,parent){var name=node.name,args=node.args,body=node.body,decorator_list=node.decorator_list,returns=node.returns,values={};if(null!==decorator_list)for(var i=0;i<decorator_list.length;i++)values["DECORATOR"+i]=this.convert(decorator_list[i],node);var parsedArgs=0;null!==args&&(parsedArgs=this.parseArgs(args,values,node.lineno,node));var hasReturn=null!==returns&&("NameConstant"!==returns._astname||returns.value!==Sk.builtin.none.none$);return hasReturn&&(values.RETURNS=this.convert(returns,node)),BlockMirrorTextToBlocks.create_block("ast_FunctionDef",node.lineno,{NAME:Sk.ffi.remapToJs(name)},values,{inline:"false"},{"@decorators":null===decorator_list?0:decorator_list.length,"@parameters":parsedArgs,"@returns":hasReturn},{BODY:this.convertBody(body,node)})},Blockly.Blocks.ast_Lambda={init:function init(){this.appendDummyInput().appendField("lambda").setAlign(Blockly.ALIGN_RIGHT),this.decoratorsCount_=0,this.parametersCount_=0,this.hasReturn_=!1,this.appendValueInput("BODY").appendField("body").setAlign(Blockly.ALIGN_RIGHT).setCheck(null),this.setInputsInline(!1),this.setOutput(!0),this.setColour(BlockMirrorTextToBlocks.COLOR.FUNCTIONS),this.updateShape_()},mutationToDom:Blockly.Blocks.ast_FunctionDef.mutationToDom,domToMutation:Blockly.Blocks.ast_FunctionDef.domToMutation,updateShape_:Blockly.Blocks.ast_FunctionDef.updateShape_,setReturnAnnotation_:Blockly.Blocks.ast_FunctionDef.setReturnAnnotation_},Blockly.Python.ast_Lambda=function(block){for(var parameters=new Array(block.parametersCount_),i=0;i<block.parametersCount_;i++)parameters[i]=Blockly.Python.valueToCode(block,"PARAMETER"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var body=Blockly.Python.valueToCode(block,"BODY",Blockly.Python.ORDER_LAMBDA)||Blockly.Python.PASS;return["lambda "+parameters.join(", ")+": "+body,Blockly.Python.ORDER_LAMBDA]},BlockMirrorTextToBlocks.prototype.ast_Lambda=function(node,parent){var args=node.args,body=node.body,values={BODY:this.convert(body,node)},parsedArgs=0;return null!==args&&(parsedArgs=this.parseArgs(args,values,node.lineno)),BlockMirrorTextToBlocks.create_block("ast_Lambda",node.lineno,{},values,{inline:"false"},{"@decorators":0,"@parameters":parsedArgs,"@returns":!1})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_ReturnFull",message0:"return %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Return",message0:"return",inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),Blockly.Python.ast_Return=function(block){return"return\n"},Blockly.Python.ast_ReturnFull=function(block){var value;return"return "+(Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_ATOMIC)||Blockly.Python.blank)+"\n"},BlockMirrorTextToBlocks.prototype.ast_Return=function(node,parent){var value=node.value;return null==value?BlockMirrorTextToBlocks.create_block("ast_Return",node.lineno):BlockMirrorTextToBlocks.create_block("ast_ReturnFull",node.lineno,{},{VALUE:this.convert(value,node)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_YieldFull",message0:"yield %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Yield",message0:"yield",inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),Blockly.Python.ast_Yield=function(block){return["yield",Blockly.Python.ORDER_LAMBDA]},Blockly.Python.ast_YieldFull=function(block){var value;return["yield "+(Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_LAMBDA)||Blockly.Python.blank),Blockly.Python.ORDER_LAMBDA]},BlockMirrorTextToBlocks.prototype.ast_Yield=function(node,parent){var value=node.value;return null==value?BlockMirrorTextToBlocks.create_block("ast_Yield",node.lineno):BlockMirrorTextToBlocks.create_block("ast_YieldFull",node.lineno,{},{VALUE:this.convert(value,node)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_YieldFrom",message0:"yield from %1",args0:[{type:"input_value",name:"VALUE"}],inputsInline:!1,output:null,colour:BlockMirrorTextToBlocks.COLOR.FUNCTIONS}),Blockly.Python.ast_YieldFrom=function(block){var value;return["yield from "+(Blockly.Python.valueToCode(block,"VALUE",Blockly.Python.ORDER_LAMBDA)||Blockly.Python.blank),Blockly.Python.ORDER_LAMBDA]},BlockMirrorTextToBlocks.prototype.ast_YieldFrom=function(node,parent){var value=node.value;return BlockMirrorTextToBlocks.create_block("ast_YieldFrom",node.lineno,{},{VALUE:this.convert(value,node)})},Blockly.Blocks.ast_Global={init:function init(){this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.VARIABLES),this.nameCount_=1,this.appendDummyInput("GLOBAL").appendField("make global","START_GLOBALS"),this.updateShape_()},updateShape_:function updateShape_(){var input=this.getInput("GLOBAL");this.getField("START_GLOBALS")&&this.setFieldValue(this.nameCount_>1?"make globals":"make global","START_GLOBALS");for(var i=0;i<this.nameCount_;i++)this.getField("NAME"+i)||(0!==i&&input.appendField(",").setAlign(Blockly.ALIGN_RIGHT),input.appendField(new Blockly.FieldVariable("variable"),"NAME"+i));for(;this.getField("NAME"+i);)input.removeField("NAME"+i),i++;this.getField("END_GLOBALS")&&input.removeField("END_GLOBALS"),input.appendField("available","END_GLOBALS")},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("names",this.nameCount_),container},domToMutation:function domToMutation(xmlElement){this.nameCount_=parseInt(xmlElement.getAttribute("names"),10),this.updateShape_()}},Blockly.Python.ast_Global=function(block){for(var elements=new Array(block.nameCount_),i=0;i<block.nameCount_;i++)elements[i]=Blockly.Python.variableDB_.getName(block.getFieldValue("NAME"+i),Blockly.Variables.NAME_TYPE);return"global "+elements.join(", ")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Global=function(node,parent){for(var names=node.names,fields={},i=0;i<names.length;i++)fields["NAME"+i]=Sk.ffi.remapToJs(names[i]);return BlockMirrorTextToBlocks.create_block("ast_Global",node.lineno,fields,{},{inline:"true"},{"@names":names.length})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Break",message0:"break",inputsInline:!1,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),Blockly.Python.ast_Break=function(block){return"break\n"},BlockMirrorTextToBlocks.prototype.ast_Break=function(node,parent){return BlockMirrorTextToBlocks.create_block("ast_Break",node.lineno)},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Continue",message0:"continue",inputsInline:!1,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.CONTROL}),Blockly.Python.ast_Continue=function(block){return"continue\n"},BlockMirrorTextToBlocks.prototype.ast_Continue=function(node,parent){return BlockMirrorTextToBlocks.create_block("ast_Continue",node.lineno)},BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL=0,BlockMirrorTextToBlocks.HANDLERS_NO_AS=1,BlockMirrorTextToBlocks.HANDLERS_COMPLETE=3,Blockly.Blocks.ast_Try={init:function init(){this.handlersCount_=0,this.handlers_=[],this.hasElse_=!1,this.hasFinally_=!1,this.appendDummyInput().appendField("try:"),this.appendStatementInput("BODY").setCheck(null).setAlign(Blockly.ALIGN_RIGHT),this.setInputsInline(!0),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.EXCEPTIONS),this.updateShape_()},updateShape_:function updateShape_(){for(var i=0;i<this.handlersCount_;i++)this.handlers_[i]===BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL?this.appendDummyInput().appendField("except"):(this.appendValueInput("TYPE"+i).setCheck(null).appendField("except"),this.handlers_[i]===BlockMirrorTextToBlocks.HANDLERS_COMPLETE&&this.appendDummyInput().appendField("as").appendField(new Blockly.FieldVariable("item"),"NAME"+i)),this.appendStatementInput("HANDLER"+i).setCheck(null);this.hasElse_&&(this.appendDummyInput().appendField("else:"),this.appendStatementInput("ORELSE").setCheck(null)),this.hasFinally_&&(this.appendDummyInput().appendField("finally:"),this.appendStatementInput("FINALBODY").setCheck(null))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");container.setAttribute("orelse",this.hasElse_),container.setAttribute("finalbody",this.hasFinally_),container.setAttribute("handlers",this.handlersCount_);for(var i=0;i<this.handlersCount_;i++){var parameter=document.createElement("arg");parameter.setAttribute("name",this.handlers_[i]),container.appendChild(parameter)}return container},domToMutation:function domToMutation(xmlElement){this.hasElse_="true"===xmlElement.getAttribute("orelse"),this.hasFinally_="true"===xmlElement.getAttribute("finalbody"),this.handlersCount_=parseInt(xmlElement.getAttribute("handlers"),10),this.handlers_=[];for(var i=0,childNode;childNode=xmlElement.childNodes[i];i++)"arg"===childNode.nodeName.toLowerCase()&&this.handlers_.push(parseInt(childNode.getAttribute("name"),10));this.updateShape_()}},Blockly.Python.ast_Try=function(block){for(var body=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS,handlers=new Array(block.handlersCount_),i=0;i<block.handlersCount_;i++){var level=block.handlers_[i],clause="except";level!==BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL&&(clause+=" "+Blockly.Python.valueToCode(block,"TYPE"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank,level===BlockMirrorTextToBlocks.HANDLERS_COMPLETE&&(clause+=" as "+Blockly.Python.variableDB_.getName(block.getFieldValue("NAME"+i),Blockly.Variables.NAME_TYPE))),clause+=":\n"+(Blockly.Python.statementToCode(block,"HANDLER"+i)||Blockly.Python.PASS),handlers[i]=clause}var orelse="";this.hasElse_&&(orelse="else:\n"+(Blockly.Python.statementToCode(block,"ORELSE")||Blockly.Python.PASS));var finalbody="";return this.hasFinally_&&(finalbody="finally:\n"+(Blockly.Python.statementToCode(block,"FINALBODY")||Blockly.Python.PASS)),"try:\n"+body+handlers.join("")+orelse+finalbody},BlockMirrorTextToBlocks.prototype.ast_Try=function(node,parent){var body=node.body,handlers=node.handlers,orelse=node.orelse,finalbody=node.finalbody,fields={},values={},mutations={"@ORELSE":null!==orelse&&orelse.length>0,"@FINALBODY":null!==finalbody&&finalbody.length>0,"@HANDLERS":handlers.length},statements={BODY:this.convertBody(body,node)};null!==orelse&&(statements.ORELSE=this.convertBody(orelse,node)),null!==finalbody&&finalbody.length&&(statements.FINALBODY=this.convertBody(finalbody,node));for(var handledLevels=[],i=0;i<handlers.length;i++){var handler=handlers[i];statements["HANDLER"+i]=this.convertBody(handler.body,node),null===handler.type?handledLevels.push(BlockMirrorTextToBlocks.HANDLERS_CATCH_ALL):(values["TYPE"+i]=this.convert(handler.type,node),null===handler.name?handledLevels.push(BlockMirrorTextToBlocks.HANDLERS_NO_AS):(handledLevels.push(BlockMirrorTextToBlocks.HANDLERS_COMPLETE),fields["NAME"+i]=Sk.ffi.remapToJs(handler.name.id)))}return mutations.ARG=handledLevels,BlockMirrorTextToBlocks.create_block("ast_Try",node.lineno,fields,values,{},mutations,statements)},Blockly.Blocks.ast_ClassDef={init:function init(){this.decorators_=0,this.bases_=0,this.keywords_=0,this.appendDummyInput("HEADER").appendField("Class").appendField(new Blockly.FieldVariable("item"),"NAME"),this.appendStatementInput("BODY").setCheck(null),this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.OO),this.updateShape_()},updateShape_:function updateShape_(){for(var i=0;i<this.decorators_;i++){var input=this.appendValueInput("DECORATOR"+i).setCheck(null).setAlign(Blockly.ALIGN_RIGHT);0===i&&input.appendField("decorated by"),this.moveInputBefore("DECORATOR"+i,"BODY")}for(var _i9=0;_i9<this.bases_;_i9++){var _input=this.appendValueInput("BASE"+_i9).setCheck(null).setAlign(Blockly.ALIGN_RIGHT);0===_i9&&_input.appendField("inherits from"),this.moveInputBefore("BASE"+_i9,"BODY")}for(var _i10=0;_i10<this.keywords_;_i10++)this.appendValueInput("KEYWORDVALUE"+_i10).setCheck(null).setAlign(Blockly.ALIGN_RIGHT).appendField(new Blockly.FieldTextInput("metaclass"),"KEYWORDNAME"+_i10).appendField("="),this.moveInputBefore("KEYWORDVALUE"+_i10,"BODY")},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");return container.setAttribute("decorators",this.decorators_),container.setAttribute("bases",this.bases_),container.setAttribute("keywords",this.keywords_),container},domToMutation:function domToMutation(xmlElement){this.decorators_=parseInt(xmlElement.getAttribute("decorators"),10),this.bases_=parseInt(xmlElement.getAttribute("bases"),10),this.keywords_=parseInt(xmlElement.getAttribute("keywords"),10),this.updateShape_()}},Blockly.Python.ast_ClassDef=function(block){for(var name=Blockly.Python.variableDB_.getName(block.getFieldValue("NAME"),Blockly.Variables.NAME_TYPE),decorators=new Array(block.decorators_),i=0;i<block.decorators_;i++){var decorator=Blockly.Python.valueToCode(block,"DECORATOR"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;decorators[i]="@"+decorator+"\n"}for(var bases=new Array(block.bases_),_i11=0;_i11<block.bases_;_i11++)bases[_i11]=Blockly.Python.valueToCode(block,"BASE"+_i11,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;for(var keywords=new Array(block.keywords_),_i12=0;_i12<block.keywords_;_i12++){var _name=block.getFieldValue("KEYWORDNAME"+_i12),value=Blockly.Python.valueToCode(block,"KEYWORDVALUE"+_i12,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;keywords[_i12]="**"==_name?"**"+value:_name+"="+value}var body=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS,args=bases.concat(keywords);return args=0===args.length?"":"("+args.join(", ")+")",decorators.join("")+"class "+name+args+":\n"+body},BlockMirrorTextToBlocks.prototype.ast_ClassDef=function(node,parent){var name=node.name,bases=node.bases,keywords=node.keywords,body=node.body,decorator_list=node.decorator_list,values={},fields={NAME:Sk.ffi.remapToJs(name)};if(null!==decorator_list)for(var i=0;i<decorator_list.length;i++)values["DECORATOR"+i]=this.convert(decorator_list[i],node);if(null!==bases)for(var _i13=0;_i13<bases.length;_i13++)values["BASE"+_i13]=this.convert(bases[_i13],node);if(null!==keywords)for(var _i14=0;_i14<keywords.length;_i14++){values["KEYWORDVALUE"+_i14]=this.convert(keywords[_i14].value,node);var arg=keywords[_i14].arg;fields["KEYWORDNAME"+_i14]=null===arg?"**":Sk.ffi.remapToJs(arg)}return BlockMirrorTextToBlocks.create_block("ast_ClassDef",node.lineno,fields,values,{inline:"false"},{"@decorators":null===decorator_list?0:decorator_list.length,"@bases":null===bases?0:bases.length,"@keywords":null===keywords?0:keywords.length},{BODY:this.convertBody(body,node)})},Blockly.Blocks.ast_Import={init:function init(){this.nameCount_=1,this.from_=!1,this.regulars_=[!0],this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.PYTHON),this.updateShape_()},updateShape_:function updateShape_(){this.from_&&!this.getInput("FROM")?this.appendDummyInput("FROM").setAlign(Blockly.ALIGN_RIGHT).appendField("from").appendField(new Blockly.FieldTextInput("module"),"MODULE"):!this.from_&&this.getInput("FROM")&&this.removeInput("FROM");for(var i=0;i<this.nameCount_;i++){var input=this.getInput("CLAUSE"+i);input||(input=this.appendDummyInput("CLAUSE"+i).setAlign(Blockly.ALIGN_RIGHT),0===i&&input.appendField("import"),input.appendField(new Blockly.FieldTextInput("default"),"NAME"+i)),this.regulars_[i]&&this.getField("AS"+i)?(input.removeField("AS"+i),input.removeField("ASNAME"+i)):this.regulars_[i]||this.getField("AS"+i)||input.appendField("as","AS"+i).appendField(new Blockly.FieldVariable("alias"),"ASNAME"+i)}for(;this.getInput("CLAUSE"+i);)this.removeInput("CLAUSE"+i),i++;for(this.from_&&this.nameCount_>0&&this.moveInputBefore("FROM","CLAUSE0"),i=0;i+1<this.nameCount_;i++)this.moveInputBefore("CLAUSE"+i,"CLAUSE"+(i+1))},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");container.setAttribute("names",this.nameCount_),container.setAttribute("from",this.from_);for(var i=0;i<this.nameCount_;i++){var parameter=document.createElement("regular");parameter.setAttribute("name",this.regulars_[i]),container.appendChild(parameter)}return container},domToMutation:function domToMutation(xmlElement){this.nameCount_=parseInt(xmlElement.getAttribute("names"),10),this.from_="true"===xmlElement.getAttribute("from"),this.regulars_=[];for(var i=0,childNode;childNode=xmlElement.childNodes[i];i++)"regular"===childNode.nodeName.toLowerCase()&&this.regulars_.push("true"===childNode.getAttribute("name"));this.updateShape_()}},Blockly.Python.ast_Import=function(block){var from="";if(this.from_){var moduleName=block.getFieldValue("MODULE");from="from "+moduleName+" ",Blockly.Python.imported_["import_"+moduleName]=moduleName}for(var elements=new Array(block.nameCount_),i=0;i<block.nameCount_;i++){var name=block.getFieldValue("NAME"+i);elements[i]=name,this.regulars_[i]||(name=Blockly.Python.variableDB_.getName(block.getFieldValue("ASNAME"+i),Blockly.Variables.NAME_TYPE),elements[i]+=" as "+name),from||(Blockly.Python.imported_["import_"+name]=name)}return from+"import "+elements.join(", ")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Import=function(node,parent){for(var names=node.names,fields={},mutations={"@names":names.length},regulars=[],simpleName="",i=0;i<names.length;i++){fields["NAME"+i]=Sk.ffi.remapToJs(names[i].name);var isRegular=null===names[i].asname;isRegular?simpleName=fields["NAME"+i]:(fields["ASNAME"+i]=Sk.ffi.remapToJs(names[i].asname),simpleName=fields["ASNAME"+i]),regulars.push(isRegular)}return mutations.regular=regulars,-1!==this.hiddenImports.indexOf(simpleName)?null:("ImportFrom"===node._astname?(mutations["@from"]=!0,fields.MODULE=".".repeat(node.level)+Sk.ffi.remapToJs(node.module)):mutations["@from"]=!1,BlockMirrorTextToBlocks.create_block("ast_Import",node.lineno,fields,{},{inline:!0},mutations))},BlockMirrorTextToBlocks.prototype.ast_ImportFrom=BlockMirrorTextToBlocks.prototype.ast_Import,BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_WithItem",output:"WithItem",message0:"context %1",args0:[{type:"input_value",name:"CONTEXT"}],enableContextMenu:!1,colour:BlockMirrorTextToBlocks.COLOR.CONTROL,inputsInline:!1}),Blockly.Python.ast_WithItem=function(block){var context;return[Blockly.Python.valueToCode(block,"CONTEXT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank,Blockly.Python.ORDER_NONE]},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_WithItemAs",output:"WithItem",message0:"context %1 as %2",args0:[{type:"input_value",name:"CONTEXT"},{type:"input_value",name:"AS"}],enableContextMenu:!1,colour:BlockMirrorTextToBlocks.COLOR.CONTROL,inputsInline:!0}),Blockly.Python.ast_WithItemAs=function(block){var context,as;return[(Blockly.Python.valueToCode(block,"CONTEXT",Blockly.Python.ORDER_NONE)||Blockly.Python.blank)+" as "+(Blockly.Python.valueToCode(block,"AS",Blockly.Python.ORDER_NONE)||Blockly.Python.blank),Blockly.Python.ORDER_NONE]},Blockly.Blocks.ast_With={init:function init(){this.appendValueInput("ITEM0").appendField("with"),this.appendStatementInput("BODY").setCheck(null),this.itemCount_=1,this.renames_=[!1],this.setInputsInline(!1),this.setPreviousStatement(!0,null),this.setNextStatement(!0,null),this.setColour(BlockMirrorTextToBlocks.COLOR.CONTROL),this.updateShape_()},mutationToDom:function mutationToDom(){var container=document.createElement("mutation");container.setAttribute("items",this.itemCount_);for(var i=0;i<this.itemCount_;i++){var parameter=document.createElement("as");parameter.setAttribute("name",this.renames_[i]),container.appendChild(parameter)}return container},domToMutation:function domToMutation(xmlElement){this.itemCount_=parseInt(xmlElement.getAttribute("items"),10),this.renames_=[];for(var i=0,childNode;childNode=xmlElement.childNodes[i];i++)"as"===childNode.nodeName.toLowerCase()&&this.renames_.push("true"===childNode.getAttribute("name"));this.updateShape_()},updateShape_:function updateShape_(){for(var i=1;i<this.itemCount_;i++){var input=this.getInput("ITEM"+i);input||(input=this.appendValueInput("ITEM"+i))}for(;this.getInput("ITEM"+i);)this.removeInput("ITEM"+i),i++;for(i=0;i<this.itemCount_;i++)this.moveInputBefore("ITEM"+i,"BODY")}},Blockly.Python.ast_With=function(block){for(var items=new Array(block.itemCount_),i=0;i<block.itemCount_;i++)items[i]=Blockly.Python.valueToCode(block,"ITEM"+i,Blockly.Python.ORDER_NONE)||Blockly.Python.blank;var body=Blockly.Python.statementToCode(block,"BODY")||Blockly.Python.PASS;return"with "+items.join(", ")+":\n"+body},BlockMirrorTextToBlocks.prototype.ast_With=function(node,parent){for(var items=node.items,body=node.body,values={},mutations={"@items":items.length},renamedItems=[],i=0;i<items.length;i++){var hasRename=items[i].optional_vars;renamedItems.push(hasRename);var innerValues={CONTEXT:this.convert(items[i].context_expr,node)};hasRename?(innerValues.AS=this.convert(items[i].optional_vars,node),values["ITEM"+i]=BlockMirrorTextToBlocks.create_block("ast_WithItemAs",node.lineno,{},innerValues,this.LOCKED_BLOCK)):values["ITEM"+i]=BlockMirrorTextToBlocks.create_block("ast_WithItem",node.lineno,{},innerValues,this.LOCKED_BLOCK)}return mutations.as=renamedItems,BlockMirrorTextToBlocks.create_block("ast_With",node.lineno,{},values,{inline:"false"},mutations,{BODY:this.convertBody(body,node)})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Comment",message0:"# Comment: %1",args0:[{type:"field_input",name:"BODY",text:"will be ignored"}],inputsInline:!0,previousStatement:null,nextStatement:null,colour:BlockMirrorTextToBlocks.COLOR.PYTHON}),Blockly.Python.ast_Comment=function(block){var text_body;return"#"+block.getFieldValue("BODY")+"\n"},BlockMirrorTextToBlocks.prototype.ast_Comment=function(txt,lineno){var commentText=txt.slice(1);return BlockMirrorTextToBlocks.create_block("ast_Comment",lineno,{BODY:commentText})},BlockMirrorTextToBlocks.BLOCKS.push({type:"ast_Raw",message0:"Code Block: %1 %2",args0:[{type:"input_dummy"},{type:"field_multilinetext",name:"TEXT",value:""}],colour:BlockMirrorTextToBlocks.COLOR.PYTHON,previousStatement:null,nextStatement:null}),Blockly.Python.ast_Raw=function(block){var code;return block.getFieldValue("TEXT")+"\n"};